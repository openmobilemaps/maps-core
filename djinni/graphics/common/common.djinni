rect_f = record {
    x: f32;
    y: f32;
    width: f32;
    height: f32;
}

rect_i = record {
    x: i32;
    y: i32;
    width: i32;
    height: i32;
}

rect_d = record {
    x: f64;
    y: f64;
    width: f64;
    height: f64;
}

vec_2_f = record {
    x: f32;
    y: f32;
}

vec_3_f = record {
    x: f32;
    y: f32;
    z: f32;
}

vec_2_i = record {
    x: i32;
    y: i32;
}

vec_3_i = record {
    x: i32;
    y: i32;
    z: i32;
}

vec_2_d = record {
    x: f64;
    y: f64;
}

vec_3_d = record {
    x: f64;
    y: f64;
    z: f64;
}

quad_2d_d = record {
    top_left: vec_2_d;
    top_right: vec_2_d;
    bottom_right: vec_2_d;
    bottom_left: vec_2_d;
}

quad_3d_d = record {
    top_left: vec_3_d;
    top_right: vec_3_d;
    bottom_right: vec_3_d;
    bottom_left: vec_3_d;
}

color = record {
    r: f32;
    g: f32;
    b: f32;
    a: f32;
} deriving (eq, ord)

shared_bytes = record {
    address: i64;
    element_count: i32;
    bytes_per_element: i32;
}
