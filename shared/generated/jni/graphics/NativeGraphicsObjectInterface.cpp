// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from graphicsobjects.djinni

#include "NativeGraphicsObjectInterface.h"  // my header
#include "Marshal.hpp"
#include "NativeRenderingContext.h"

namespace djinni_generated {

NativeGraphicsObjectInterface::NativeGraphicsObjectInterface() : ::djinni::JniInterface<::GraphicsObjectInterface, NativeGraphicsObjectInterface>("ch/ubique/mapscore/shared/graphics/GraphicsObjectInterface$CppProxy") {}

NativeGraphicsObjectInterface::~NativeGraphicsObjectInterface() = default;

NativeGraphicsObjectInterface::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeGraphicsObjectInterface::JavaProxy::~JavaProxy() = default;

bool NativeGraphicsObjectInterface::JavaProxy::isReady() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGraphicsObjectInterface>::get();
    auto jret = jniEnv->CallBooleanMethod(Handle::get().get(), data.method_isReady);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::Bool::toCpp(jniEnv, jret);
}
void NativeGraphicsObjectInterface::JavaProxy::setup() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGraphicsObjectInterface>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_setup);
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeGraphicsObjectInterface::JavaProxy::clear() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGraphicsObjectInterface>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_clear);
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeGraphicsObjectInterface::JavaProxy::render(const std::shared_ptr<::RenderingContext> & c_context) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGraphicsObjectInterface>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_render,
                           ::djinni::get(::djinni_generated::NativeRenderingContext::fromCpp(jniEnv, c_context)));
    ::djinni::jniExceptionCheck(jniEnv);
}

CJNIEXPORT void JNICALL Java_ch_ubique_mapscore_shared_graphics_GraphicsObjectInterface_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::GraphicsObjectInterface>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jboolean JNICALL Java_ch_ubique_mapscore_shared_graphics_GraphicsObjectInterface_00024CppProxy_native_1isReady(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::GraphicsObjectInterface>(nativeRef);
        auto r = ref->isReady();
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_ch_ubique_mapscore_shared_graphics_GraphicsObjectInterface_00024CppProxy_native_1setup(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::GraphicsObjectInterface>(nativeRef);
        ref->setup();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_ch_ubique_mapscore_shared_graphics_GraphicsObjectInterface_00024CppProxy_native_1clear(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::GraphicsObjectInterface>(nativeRef);
        ref->clear();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_ch_ubique_mapscore_shared_graphics_GraphicsObjectInterface_00024CppProxy_native_1render(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeRenderingContext::JniType j_context)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::GraphicsObjectInterface>(nativeRef);
        ref->render(::djinni_generated::NativeRenderingContext::toCpp(jniEnv, j_context));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
