// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from core.djinni

package io.openmobilemaps.mapscore.shared.graphics

import com.snapchat.djinni.NativeObjectManager
import java.util.concurrent.atomic.AtomicBoolean

abstract class RendererInterface {

    abstract fun addToRenderQueue(tasks: ArrayList<RenderTask>)

    /** Ensure calling on graphics thread */
    abstract fun drawFrame(renderingContext: RenderingContextInterface, camera: CameraInterface)

    private class CppProxy : RendererInterface {
        private val nativeRef: Long
        private val destroyed: AtomicBoolean = AtomicBoolean(false)

        private constructor(nativeRef: Long) {
            if (nativeRef == 0L) error("nativeRef is zero")
            this.nativeRef = nativeRef
            NativeObjectManager.register(this, nativeRef)
        }

        external fun nativeDestroy(nativeRef: Long)

        override fun addToRenderQueue(tasks: ArrayList<RenderTask>) {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_addToRenderQueue(this.nativeRef, tasks)
        }
        private external fun native_addToRenderQueue(_nativeRef: Long, tasks: ArrayList<RenderTask>)

        override fun drawFrame(renderingContext: RenderingContextInterface, camera: CameraInterface) {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_drawFrame(this.nativeRef, renderingContext, camera)
        }
        private external fun native_drawFrame(_nativeRef: Long, renderingContext: RenderingContextInterface, camera: CameraInterface)
    }
}
