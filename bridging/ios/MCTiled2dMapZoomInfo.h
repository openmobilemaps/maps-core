// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from tiled_layer.djinni

#import <Foundation/Foundation.h>

@interface MCTiled2dMapZoomInfo : NSObject
- (nonnull instancetype)init NS_UNAVAILABLE;
+ (nonnull instancetype)new NS_UNAVAILABLE;
- (nonnull instancetype)initWithZoomLevelScaleFactor:(float)zoomLevelScaleFactor
                               numDrawPreviousLayers:(int32_t)numDrawPreviousLayers
                       numDrawPreviousOrLaterTLayers:(int32_t)numDrawPreviousOrLaterTLayers
                                  adaptScaleToScreen:(BOOL)adaptScaleToScreen
                                            maskTile:(BOOL)maskTile
                                           underzoom:(BOOL)underzoom
                                            overzoom:(BOOL)overzoom NS_DESIGNATED_INITIALIZER;
+ (nonnull instancetype)tiled2dMapZoomInfoWithZoomLevelScaleFactor:(float)zoomLevelScaleFactor
                                             numDrawPreviousLayers:(int32_t)numDrawPreviousLayers
                                     numDrawPreviousOrLaterTLayers:(int32_t)numDrawPreviousOrLaterTLayers
                                                adaptScaleToScreen:(BOOL)adaptScaleToScreen
                                                          maskTile:(BOOL)maskTile
                                                         underzoom:(BOOL)underzoom
                                                          overzoom:(BOOL)overzoom;

/** this factor is applied to the the scale */
@property (nonatomic, readonly) float zoomLevelScaleFactor;

@property (nonatomic, readonly) int32_t numDrawPreviousLayers;

@property (nonatomic, readonly) int32_t numDrawPreviousOrLaterTLayers;

/**
 * if this flag is set to true the map is scaled according to the wmts scaledenominator (https://gis.stackexchange.com/questions/315881/what-is-wmts-scaledenominator)
 * and the screen ppi
 */
@property (nonatomic, readonly) BOOL adaptScaleToScreen;

@property (nonatomic, readonly) BOOL maskTile;

@property (nonatomic, readonly) BOOL underzoom;

@property (nonatomic, readonly) BOOL overzoom;

@end
