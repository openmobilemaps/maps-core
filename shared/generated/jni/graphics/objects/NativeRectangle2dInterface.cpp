// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from graphicsobjects.djinni

#include "NativeRectangle2dInterface.h"  // my header
#include "NativeGraphicsObjectInterface.h"
#include "NativeRectF.h"
#include "NativeRenderingContextInterface.h"
#include "NativeTextureHolder.h"

namespace djinni_generated {

NativeRectangle2dInterface::NativeRectangle2dInterface() : ::djinni::JniInterface<::Rectangle2dInterface, NativeRectangle2dInterface>("ch/ubique/mapscore/shared/graphics/objects/Rectangle2dInterface$CppProxy") {}

NativeRectangle2dInterface::~NativeRectangle2dInterface() = default;

NativeRectangle2dInterface::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeRectangle2dInterface::JavaProxy::~JavaProxy() = default;

void NativeRectangle2dInterface::JavaProxy::setFrame(const ::RectF & c_frame, const ::RectF & c_textureCoordinates) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeRectangle2dInterface>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_setFrame,
                           ::djinni::get(::djinni_generated::NativeRectF::fromCpp(jniEnv, c_frame)),
                           ::djinni::get(::djinni_generated::NativeRectF::fromCpp(jniEnv, c_textureCoordinates)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeRectangle2dInterface::JavaProxy::loadTexture(const std::shared_ptr<::RenderingContextInterface> & c_context, const std::shared_ptr<::TextureHolder> & c_textureHolder) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeRectangle2dInterface>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_loadTexture,
                           ::djinni::get(::djinni_generated::NativeRenderingContextInterface::fromCpp(jniEnv, c_context)),
                           ::djinni::get(::djinni_generated::NativeTextureHolder::fromCpp(jniEnv, c_textureHolder)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeRectangle2dInterface::JavaProxy::removeTextures(const std::shared_ptr<::RenderingContextInterface> & c_context) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeRectangle2dInterface>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_removeTextures,
                           ::djinni::get(::djinni_generated::NativeRenderingContextInterface::fromCpp(jniEnv, c_context)));
    ::djinni::jniExceptionCheck(jniEnv);
}
std::shared_ptr<::GraphicsObjectInterface> NativeRectangle2dInterface::JavaProxy::getAsGraphicsObject() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeRectangle2dInterface>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_getAsGraphicsObject);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativeGraphicsObjectInterface::toCpp(jniEnv, jret);
}

CJNIEXPORT void JNICALL Java_ch_ubique_mapscore_shared_graphics_objects_Rectangle2dInterface_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::Rectangle2dInterface>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_ch_ubique_mapscore_shared_graphics_objects_Rectangle2dInterface_00024CppProxy_native_1setFrame(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeRectF::JniType j_frame, ::djinni_generated::NativeRectF::JniType j_textureCoordinates)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Rectangle2dInterface>(nativeRef);
        ref->setFrame(::djinni_generated::NativeRectF::toCpp(jniEnv, j_frame),
                      ::djinni_generated::NativeRectF::toCpp(jniEnv, j_textureCoordinates));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_ch_ubique_mapscore_shared_graphics_objects_Rectangle2dInterface_00024CppProxy_native_1loadTexture(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeRenderingContextInterface::JniType j_context, jobject j_textureHolder)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Rectangle2dInterface>(nativeRef);
        ref->loadTexture(::djinni_generated::NativeRenderingContextInterface::toCpp(jniEnv, j_context),
                         ::djinni_generated::NativeTextureHolder::toCpp(jniEnv, j_textureHolder));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_ch_ubique_mapscore_shared_graphics_objects_Rectangle2dInterface_00024CppProxy_native_1removeTextures(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeRenderingContextInterface::JniType j_context)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Rectangle2dInterface>(nativeRef);
        ref->removeTextures(::djinni_generated::NativeRenderingContextInterface::toCpp(jniEnv, j_context));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_ch_ubique_mapscore_shared_graphics_objects_Rectangle2dInterface_00024CppProxy_native_1getAsGraphicsObject(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Rectangle2dInterface>(nativeRef);
        auto r = ref->getAsGraphicsObject();
        return ::djinni::release(::djinni_generated::NativeGraphicsObjectInterface::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
