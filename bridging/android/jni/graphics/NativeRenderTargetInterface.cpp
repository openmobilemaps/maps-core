// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from core.djinni

#include "NativeRenderTargetInterface.h"  // my header
#include "Marshal.hpp"
#include "NativeOpenGlRenderTargetInterface.h"

namespace djinni_generated {

NativeRenderTargetInterface::NativeRenderTargetInterface() : ::djinni::JniInterface<::RenderTargetInterface, NativeRenderTargetInterface>("io/openmobilemaps/mapscore/shared/graphics/RenderTargetInterface$CppProxy") {}

NativeRenderTargetInterface::~NativeRenderTargetInterface() = default;

NativeRenderTargetInterface::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeRenderTargetInterface::JavaProxy::~JavaProxy() = default;

/*nullable*/ std::shared_ptr<::OpenGlRenderTargetInterface> NativeRenderTargetInterface::JavaProxy::asGlRenderTargetInterface() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeRenderTargetInterface>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_asGlRenderTargetInterface);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::Optional<std::optional, ::djinni_generated::NativeOpenGlRenderTargetInterface>::toCpp(jniEnv, jret);
}

CJNIEXPORT void JNICALL Java_io_openmobilemaps_mapscore_shared_graphics_RenderTargetInterface_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        delete reinterpret_cast<::djinni::CppProxyHandle<::RenderTargetInterface>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_graphics_RenderTargetInterface_00024CppProxy_native_1asGlRenderTargetInterface(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::RenderTargetInterface>(nativeRef);
        auto r = ref->asGlRenderTargetInterface();
        return ::djinni::release(::djinni::Optional<std::optional, ::djinni_generated::NativeOpenGlRenderTargetInterface>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

} // namespace djinni_generated
