// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from wmts_capabilities.djinni

package io.openmobilemaps.mapscore.shared.map.layers.tiled.raster.wmts

import java.util.concurrent.atomic.AtomicBoolean

abstract class WmtsCapabilitiesResource {

    abstract fun createLayer(identifier: String, textureLoader: io.openmobilemaps.mapscore.shared.map.loader.TextureLoaderInterface): io.openmobilemaps.mapscore.shared.map.layers.tiled.raster.Tiled2dMapRasterLayerInterface

    abstract fun getAllLayers(): ArrayList<WmtsLayerDescription>

    companion object {
        @JvmStatic
        fun create(xml: String): WmtsCapabilitiesResource {
            return CppProxy.create(xml)
        }
    }

    private class CppProxy : WmtsCapabilitiesResource {
        private val nativeRef: Long
        private val destroyed: AtomicBoolean = AtomicBoolean(false)

        private constructor(nativeRef: Long) {
            if (nativeRef == 0L) error("nativeRef is zero")
            this.nativeRef = nativeRef
        }

        private external fun nativeDestroy(nativeRef: Long)
        fun _djinni_private_destroy() {
            val destroyed = this.destroyed.getAndSet(true)
            if (!destroyed) nativeDestroy(this.nativeRef)
        }
        protected fun finalize() {
            _djinni_private_destroy()
        }

        override fun createLayer(identifier: String, textureLoader: io.openmobilemaps.mapscore.shared.map.loader.TextureLoaderInterface): io.openmobilemaps.mapscore.shared.map.layers.tiled.raster.Tiled2dMapRasterLayerInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_createLayer(this.nativeRef, identifier, textureLoader)
        }
        private external fun native_createLayer(_nativeRef: Long, identifier: String, textureLoader: io.openmobilemaps.mapscore.shared.map.loader.TextureLoaderInterface): io.openmobilemaps.mapscore.shared.map.layers.tiled.raster.Tiled2dMapRasterLayerInterface

        override fun getAllLayers(): ArrayList<WmtsLayerDescription> {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getAllLayers(this.nativeRef)
        }
        private external fun native_getAllLayers(_nativeRef: Long): ArrayList<WmtsLayerDescription>

        companion object {
            @JvmStatic
            external fun create(xml: String): WmtsCapabilitiesResource
        }
    }
}
