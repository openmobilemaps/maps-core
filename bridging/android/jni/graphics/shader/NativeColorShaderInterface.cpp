// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from shader.djinni

#include "NativeColorShaderInterface.h"  // my header
#include "Marshal.hpp"
#include "NativeShaderProgramInterface.h"

namespace djinni_generated {

NativeColorShaderInterface::NativeColorShaderInterface() : ::djinni::JniInterface<::ColorShaderInterface, NativeColorShaderInterface>("ch/ubique/mapscore/shared/graphics/shader/ColorShaderInterface$CppProxy") {}

NativeColorShaderInterface::~NativeColorShaderInterface() = default;


CJNIEXPORT void JNICALL Java_ch_ubique_mapscore_shared_graphics_shader_ColorShaderInterface_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::ColorShaderInterface>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_ch_ubique_mapscore_shared_graphics_shader_ColorShaderInterface_00024CppProxy_native_1setColor(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jfloat j_red, jfloat j_green, jfloat j_blue, jfloat j_alpha)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ColorShaderInterface>(nativeRef);
        ref->setColor(::djinni::F32::toCpp(jniEnv, j_red),
                      ::djinni::F32::toCpp(jniEnv, j_green),
                      ::djinni::F32::toCpp(jniEnv, j_blue),
                      ::djinni::F32::toCpp(jniEnv, j_alpha));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_ch_ubique_mapscore_shared_graphics_shader_ColorShaderInterface_00024CppProxy_native_1asShaderProgramInterface(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ColorShaderInterface>(nativeRef);
        auto r = ref->asShaderProgramInterface();
        return ::djinni::release(::djinni_generated::NativeShaderProgramInterface::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
