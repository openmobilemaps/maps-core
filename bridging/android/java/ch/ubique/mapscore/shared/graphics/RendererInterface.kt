// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from core.djinni

package ch.ubique.mapscore.shared.graphics

import java.util.concurrent.atomic.AtomicBoolean

abstract class RendererInterface {

    abstract fun addToRenderQueue(renderPass: RenderPassInterface)

    /** Ensure calling on graphics thread */
    abstract fun drawFrame(renderingContext: RenderingContextInterface, camera: CameraInterface)

    private class CppProxy : RendererInterface {
        private val nativeRef: Long
        private val destroyed: AtomicBoolean = AtomicBoolean(false)

        private constructor(nativeRef: Long) {
            if (nativeRef == 0L) error("nativeRef is zero")
            this.nativeRef = nativeRef
        }

        private external fun nativeDestroy(nativeRef: Long)
        fun _djinni_private_destroy() {
            val destroyed = this.destroyed.getAndSet(true)
            if (!destroyed) nativeDestroy(this.nativeRef)
        }
        protected fun finalize() {
            _djinni_private_destroy()
        }

        override fun addToRenderQueue(renderPass: RenderPassInterface) {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_addToRenderQueue(this.nativeRef, renderPass)
        }
        private external fun native_addToRenderQueue(_nativeRef: Long, renderPass: RenderPassInterface)

        override fun drawFrame(renderingContext: RenderingContextInterface, camera: CameraInterface) {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_drawFrame(this.nativeRef, renderingContext, camera)
        }
        private external fun native_drawFrame(_nativeRef: Long, renderingContext: RenderingContextInterface, camera: CameraInterface)
    }
}
