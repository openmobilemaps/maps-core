// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from core.djinni

#pragma once

#include <memory>

class CameraInterface;
class RenderPassInterface;
class RenderingContextInterface;

class RendererInterface {
public:
    virtual ~RendererInterface() = default;

    virtual void addToRenderQueue(const /*not-null*/ std::shared_ptr<RenderPassInterface> & renderPass) = 0;

    virtual void addToComputeQueue(const /*not-null*/ std::shared_ptr<RenderPassInterface> & renderPass) = 0;

    /** Ensure calling on graphics thread */
    virtual void drawFrame(const /*not-null*/ std::shared_ptr<RenderingContextInterface> & renderingContext, const /*not-null*/ std::shared_ptr<CameraInterface> & camera) = 0;

    virtual void compute(const /*not-null*/ std::shared_ptr<RenderingContextInterface> & renderingContext) = 0;
};
