// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from layers.djinni

#pragma once

#include "Tiles2dMapLayerConfig.h"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeTiles2dMapLayerConfig final : ::djinni::JniInterface<::Tiles2dMapLayerConfig, NativeTiles2dMapLayerConfig> {
public:
    using CppType = std::shared_ptr<::Tiles2dMapLayerConfig>;
    using CppOptType = std::shared_ptr<::Tiles2dMapLayerConfig>;
    using JniType = jobject;

    using Boxed = NativeTiles2dMapLayerConfig;

    ~NativeTiles2dMapLayerConfig();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeTiles2dMapLayerConfig>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeTiles2dMapLayerConfig>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeTiles2dMapLayerConfig();
    friend ::djinni::JniClass<NativeTiles2dMapLayerConfig>;
    friend ::djinni::JniInterface<::Tiles2dMapLayerConfig, NativeTiles2dMapLayerConfig>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::Tiles2dMapLayerConfig
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        ::RectD getBounds() override;
        std::string getTileUrl(int32_t x, int32_t y, int32_t zoom) override;
        std::string getTileIdentifier(int32_t x, int32_t y, int32_t zoom) override;

    private:
        friend ::djinni::JniInterface<::Tiles2dMapLayerConfig, ::djinni_generated::NativeTiles2dMapLayerConfig>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("ch/ubique/mapscore/shared/map/layers/Tiles2dMapLayerConfig") };
    const jmethodID method_getBounds { ::djinni::jniGetMethodID(clazz.get(), "getBounds", "()Lch/ubique/mapscore/shared/graphics/common/RectD;") };
    const jmethodID method_getTileUrl { ::djinni::jniGetMethodID(clazz.get(), "getTileUrl", "(III)Ljava/lang/String;") };
    const jmethodID method_getTileIdentifier { ::djinni::jniGetMethodID(clazz.get(), "getTileIdentifier", "(III)Ljava/lang/String;") };
};

}  // namespace djinni_generated
