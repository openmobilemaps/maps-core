// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from graphicsobjects.djinni

#pragma once

#include "IcosahedronInterface.h"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeIcosahedronInterface final : ::djinni::JniInterface<::IcosahedronInterface, NativeIcosahedronInterface> {
public:
    using CppType = std::shared_ptr<::IcosahedronInterface>;
    using CppOptType = std::shared_ptr<::IcosahedronInterface>;
    using JniType = jobject;

    using Boxed = NativeIcosahedronInterface;

    ~NativeIcosahedronInterface();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeIcosahedronInterface>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeIcosahedronInterface>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeIcosahedronInterface();
    friend ::djinni::JniClass<NativeIcosahedronInterface>;
    friend ::djinni::JniInterface<::IcosahedronInterface, NativeIcosahedronInterface>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::IcosahedronInterface
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void setVertices(const ::SharedBytes & vertices, const ::SharedBytes & indices) override;
        /*not-null*/ std::shared_ptr<::GraphicsObjectInterface> asGraphicsObject() override;

    private:
        friend ::djinni::JniInterface<::IcosahedronInterface, ::djinni_generated::NativeIcosahedronInterface>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("io/openmobilemaps/mapscore/shared/graphics/objects/IcosahedronInterface") };
    const jmethodID method_setVertices { ::djinni::jniGetMethodID(clazz.get(), "setVertices", "(Lio/openmobilemaps/mapscore/shared/graphics/common/SharedBytes;Lio/openmobilemaps/mapscore/shared/graphics/common/SharedBytes;)V") };
    const jmethodID method_asGraphicsObject { ::djinni::jniGetMethodID(clazz.get(), "asGraphicsObject", "()Lio/openmobilemaps/mapscore/shared/graphics/objects/GraphicsObjectInterface;") };
};

} // namespace djinni_generated
