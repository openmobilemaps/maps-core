// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from core.djinni

#import "MCMapCamera2dListenerInterface+Private.h"
#import "MCMapCamera2dListenerInterface.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#import "MCVec2D+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface MCMapCamera2dListenerInterfaceCppProxy : NSObject<MCMapCamera2dListenerInterface>

- (id)initWithCpp:(const std::shared_ptr<::MapCamera2dListenerInterface>&)cppRef;

@end

@implementation MCMapCamera2dListenerInterfaceCppProxy {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::MapCamera2dListenerInterface>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::MapCamera2dListenerInterface>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (void)onCenterPositionChanged:(nonnull MCVec2D *)position
                           zoom:(double)zoom {
    try {
        _cppRefHandle.get()->onCenterPositionChanged(::djinni_generated::Vec2D::toCpp(position),
                                                     ::djinni::F64::toCpp(zoom));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

class MapCamera2dListenerInterface::ObjcProxy final
: public ::MapCamera2dListenerInterface
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::MapCamera2dListenerInterface;
public:
    using ObjcProxyBase::ObjcProxyBase;
    void onCenterPositionChanged(const ::Vec2D & c_position, double c_zoom) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onCenterPositionChanged:(::djinni_generated::Vec2D::fromCpp(c_position))
                                                                         zoom:(::djinni::F64::fromCpp(c_zoom))];
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto MapCamera2dListenerInterface::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    if ([(id)objc isKindOfClass:[MCMapCamera2dListenerInterfaceCppProxy class]]) {
        return ((MCMapCamera2dListenerInterfaceCppProxy*)objc)->_cppRefHandle.get();
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto MapCamera2dListenerInterface::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    if (auto cppPtr = dynamic_cast<ObjcProxy*>(cpp.get())) {
        return cppPtr->djinni_private_get_proxied_objc_object();
    }
    return ::djinni::get_cpp_proxy<MCMapCamera2dListenerInterfaceCppProxy>(cpp);
}

}  // namespace djinni_generated

@end
