// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from shader.djinni

#include "NativeShaderProgramInterface.h"  // my header
#include "Marshal.hpp"
#include "NativeBlendMode.h"
#include "NativeRenderingContextInterface.h"

namespace djinni_generated {

NativeShaderProgramInterface::NativeShaderProgramInterface() : ::djinni::JniInterface<::ShaderProgramInterface, NativeShaderProgramInterface>("io/openmobilemaps/mapscore/shared/graphics/shader/ShaderProgramInterface$CppProxy") {}

NativeShaderProgramInterface::~NativeShaderProgramInterface() = default;


CJNIEXPORT void JNICALL Java_io_openmobilemaps_mapscore_shared_graphics_shader_ShaderProgramInterface_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        delete reinterpret_cast<::djinni::CppProxyHandle<::ShaderProgramInterface>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jstring JNICALL Java_io_openmobilemaps_mapscore_shared_graphics_shader_ShaderProgramInterface_00024CppProxy_native_1getProgramName(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::ShaderProgramInterface>(nativeRef);
        auto r = ref->getProgramName();
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_io_openmobilemaps_mapscore_shared_graphics_shader_ShaderProgramInterface_00024CppProxy_native_1setupProgram(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeRenderingContextInterface::JniType j_context)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::ShaderProgramInterface>(nativeRef);
        ref->setupProgram(::djinni_generated::NativeRenderingContextInterface::toCpp(jniEnv, j_context));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_io_openmobilemaps_mapscore_shared_graphics_shader_ShaderProgramInterface_00024CppProxy_native_1preRender(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeRenderingContextInterface::JniType j_context, jboolean j_isScreenSpaceCoords)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::ShaderProgramInterface>(nativeRef);
        ref->preRender(::djinni_generated::NativeRenderingContextInterface::toCpp(jniEnv, j_context),
                       ::djinni::Bool::toCpp(jniEnv, j_isScreenSpaceCoords));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_io_openmobilemaps_mapscore_shared_graphics_shader_ShaderProgramInterface_00024CppProxy_native_1setBlendMode(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_blendMode)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::ShaderProgramInterface>(nativeRef);
        ref->setBlendMode(::djinni_generated::NativeBlendMode::toCpp(jniEnv, j_blendMode));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jboolean JNICALL Java_io_openmobilemaps_mapscore_shared_graphics_shader_ShaderProgramInterface_00024CppProxy_native_1usesModelMatrix(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::ShaderProgramInterface>(nativeRef);
        auto r = ref->usesModelMatrix();
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

} // namespace djinni_generated
