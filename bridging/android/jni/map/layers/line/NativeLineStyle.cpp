// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from line.djinni

#include "NativeLineStyle.h"  // my header
#include "Marshal.hpp"
#include "NativeColorStateList.h"
#include "NativeLineCapType.h"
#include "NativeSizeType.h"

namespace djinni_generated {

NativeLineStyle::NativeLineStyle() = default;

NativeLineStyle::~NativeLineStyle() = default;

auto NativeLineStyle::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeLineStyle>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni_generated::NativeColorStateList::fromCpp(jniEnv, c.color)),
                                                           ::djinni::get(::djinni_generated::NativeColorStateList::fromCpp(jniEnv, c.gapColor)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.opacity)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.blur)),
                                                           ::djinni::get(::djinni_generated::NativeSizeType::fromCpp(jniEnv, c.widthType)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.width)),
                                                           ::djinni::get(::djinni::List<::djinni::F32>::fromCpp(jniEnv, c.dashArray)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.dashFade)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.dashAnimationSpeed)),
                                                           ::djinni::get(::djinni_generated::NativeLineCapType::fromCpp(jniEnv, c.lineCap)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.offset)),
                                                           ::djinni::get(::djinni::Bool::fromCpp(jniEnv, c.dotted)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.dottedSkew)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeLineStyle::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 14);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeLineStyle>::get();
    return {::djinni_generated::NativeColorStateList::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_color)),
            ::djinni_generated::NativeColorStateList::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_gapColor)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_opacity)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_blur)),
            ::djinni_generated::NativeSizeType::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_widthType)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_width)),
            ::djinni::List<::djinni::F32>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_dashArray)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_dashFade)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_dashAnimationSpeed)),
            ::djinni_generated::NativeLineCapType::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_lineCap)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_offset)),
            ::djinni::Bool::toCpp(jniEnv, jniEnv->GetBooleanField(j, data.field_dotted)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_dottedSkew))};
}

} // namespace djinni_generated
