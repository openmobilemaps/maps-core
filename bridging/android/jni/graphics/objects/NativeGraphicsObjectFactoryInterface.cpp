// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from graphicsobjects.djinni

#include "NativeGraphicsObjectFactoryInterface.h"  // my header
#include "NativeLine2dInterface.h"
#include "NativeLineGroup2dInterface.h"
#include "NativePolygon2dInterface.h"
#include "NativePolygonGroup2dInterface.h"
#include "NativeQuad2dInterface.h"
#include "NativeQuad3dInterface.h"
#include "NativeRenderTargetTexture.h"
#include "NativeShaderProgramInterface.h"
#include "NativeTextInterface.h"
#include "NativeVec2I.h"

namespace djinni_generated {

NativeGraphicsObjectFactoryInterface::NativeGraphicsObjectFactoryInterface() : ::djinni::JniInterface<::GraphicsObjectFactoryInterface, NativeGraphicsObjectFactoryInterface>("io/openmobilemaps/mapscore/shared/graphics/objects/GraphicsObjectFactoryInterface$CppProxy") {}

NativeGraphicsObjectFactoryInterface::~NativeGraphicsObjectFactoryInterface() = default;

NativeGraphicsObjectFactoryInterface::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeGraphicsObjectFactoryInterface::JavaProxy::~JavaProxy() = default;

/*not-null*/ std::shared_ptr<::Quad2dInterface> NativeGraphicsObjectFactoryInterface::JavaProxy::createQuad(const /*not-null*/ std::shared_ptr<::ShaderProgramInterface> & c_shader) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGraphicsObjectFactoryInterface>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_createQuad,
                                         ::djinni::get(::djinni_generated::NativeShaderProgramInterface::fromCpp(jniEnv, c_shader)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativeQuad2dInterface::toCpp(jniEnv, jret);
}
/*not-null*/ std::shared_ptr<::Quad3dInterface> NativeGraphicsObjectFactoryInterface::JavaProxy::createQuad3d(const /*not-null*/ std::shared_ptr<::ShaderProgramInterface> & c_shader) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGraphicsObjectFactoryInterface>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_createQuad3d,
                                         ::djinni::get(::djinni_generated::NativeShaderProgramInterface::fromCpp(jniEnv, c_shader)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativeQuad3dInterface::toCpp(jniEnv, jret);
}
/*not-null*/ std::shared_ptr<::Line2dInterface> NativeGraphicsObjectFactoryInterface::JavaProxy::createLine(const /*not-null*/ std::shared_ptr<::ShaderProgramInterface> & c_shader) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGraphicsObjectFactoryInterface>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_createLine,
                                         ::djinni::get(::djinni_generated::NativeShaderProgramInterface::fromCpp(jniEnv, c_shader)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativeLine2dInterface::toCpp(jniEnv, jret);
}
/*not-null*/ std::shared_ptr<::Polygon2dInterface> NativeGraphicsObjectFactoryInterface::JavaProxy::createPolygon(const /*not-null*/ std::shared_ptr<::ShaderProgramInterface> & c_shader) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGraphicsObjectFactoryInterface>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_createPolygon,
                                         ::djinni::get(::djinni_generated::NativeShaderProgramInterface::fromCpp(jniEnv, c_shader)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativePolygon2dInterface::toCpp(jniEnv, jret);
}
/*not-null*/ std::shared_ptr<::LineGroup2dInterface> NativeGraphicsObjectFactoryInterface::JavaProxy::createLineGroup(const /*not-null*/ std::shared_ptr<::ShaderProgramInterface> & c_shader) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGraphicsObjectFactoryInterface>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_createLineGroup,
                                         ::djinni::get(::djinni_generated::NativeShaderProgramInterface::fromCpp(jniEnv, c_shader)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativeLineGroup2dInterface::toCpp(jniEnv, jret);
}
/*not-null*/ std::shared_ptr<::PolygonGroup2dInterface> NativeGraphicsObjectFactoryInterface::JavaProxy::createPolygonGroup(const /*not-null*/ std::shared_ptr<::ShaderProgramInterface> & c_shader) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGraphicsObjectFactoryInterface>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_createPolygonGroup,
                                         ::djinni::get(::djinni_generated::NativeShaderProgramInterface::fromCpp(jniEnv, c_shader)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativePolygonGroup2dInterface::toCpp(jniEnv, jret);
}
/*not-null*/ std::shared_ptr<::Quad2dInterface> NativeGraphicsObjectFactoryInterface::JavaProxy::createQuadMask() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGraphicsObjectFactoryInterface>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_createQuadMask);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativeQuad2dInterface::toCpp(jniEnv, jret);
}
/*not-null*/ std::shared_ptr<::Polygon2dInterface> NativeGraphicsObjectFactoryInterface::JavaProxy::createPolygonMask() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGraphicsObjectFactoryInterface>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_createPolygonMask);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativePolygon2dInterface::toCpp(jniEnv, jret);
}
/*not-null*/ std::shared_ptr<::TextInterface> NativeGraphicsObjectFactoryInterface::JavaProxy::createText(const /*not-null*/ std::shared_ptr<::ShaderProgramInterface> & c_shader) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGraphicsObjectFactoryInterface>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_createText,
                                         ::djinni::get(::djinni_generated::NativeShaderProgramInterface::fromCpp(jniEnv, c_shader)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativeTextInterface::toCpp(jniEnv, jret);
}
/*not-null*/ std::shared_ptr<::RenderTargetTexture> NativeGraphicsObjectFactoryInterface::JavaProxy::createRenderTargetTexture(const ::Vec2I & c_size) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGraphicsObjectFactoryInterface>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_createRenderTargetTexture,
                                         ::djinni::get(::djinni_generated::NativeVec2I::fromCpp(jniEnv, c_size)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativeRenderTargetTexture::toCpp(jniEnv, jret);
}

CJNIEXPORT void JNICALL Java_io_openmobilemaps_mapscore_shared_graphics_objects_GraphicsObjectFactoryInterface_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        delete reinterpret_cast<::djinni::CppProxyHandle<::GraphicsObjectFactoryInterface>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_graphics_objects_GraphicsObjectFactoryInterface_00024CppProxy_native_1createQuad(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeShaderProgramInterface::JniType j_shader)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::GraphicsObjectFactoryInterface>(nativeRef);
        auto r = ref->createQuad(::djinni_generated::NativeShaderProgramInterface::toCpp(jniEnv, j_shader));
        return ::djinni::release(::djinni_generated::NativeQuad2dInterface::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_graphics_objects_GraphicsObjectFactoryInterface_00024CppProxy_native_1createQuad3d(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeShaderProgramInterface::JniType j_shader)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::GraphicsObjectFactoryInterface>(nativeRef);
        auto r = ref->createQuad3d(::djinni_generated::NativeShaderProgramInterface::toCpp(jniEnv, j_shader));
        return ::djinni::release(::djinni_generated::NativeQuad3dInterface::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_graphics_objects_GraphicsObjectFactoryInterface_00024CppProxy_native_1createLine(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeShaderProgramInterface::JniType j_shader)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::GraphicsObjectFactoryInterface>(nativeRef);
        auto r = ref->createLine(::djinni_generated::NativeShaderProgramInterface::toCpp(jniEnv, j_shader));
        return ::djinni::release(::djinni_generated::NativeLine2dInterface::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_graphics_objects_GraphicsObjectFactoryInterface_00024CppProxy_native_1createPolygon(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeShaderProgramInterface::JniType j_shader)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::GraphicsObjectFactoryInterface>(nativeRef);
        auto r = ref->createPolygon(::djinni_generated::NativeShaderProgramInterface::toCpp(jniEnv, j_shader));
        return ::djinni::release(::djinni_generated::NativePolygon2dInterface::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_graphics_objects_GraphicsObjectFactoryInterface_00024CppProxy_native_1createLineGroup(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeShaderProgramInterface::JniType j_shader)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::GraphicsObjectFactoryInterface>(nativeRef);
        auto r = ref->createLineGroup(::djinni_generated::NativeShaderProgramInterface::toCpp(jniEnv, j_shader));
        return ::djinni::release(::djinni_generated::NativeLineGroup2dInterface::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_graphics_objects_GraphicsObjectFactoryInterface_00024CppProxy_native_1createPolygonGroup(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeShaderProgramInterface::JniType j_shader)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::GraphicsObjectFactoryInterface>(nativeRef);
        auto r = ref->createPolygonGroup(::djinni_generated::NativeShaderProgramInterface::toCpp(jniEnv, j_shader));
        return ::djinni::release(::djinni_generated::NativePolygonGroup2dInterface::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_graphics_objects_GraphicsObjectFactoryInterface_00024CppProxy_native_1createQuadMask(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::GraphicsObjectFactoryInterface>(nativeRef);
        auto r = ref->createQuadMask();
        return ::djinni::release(::djinni_generated::NativeQuad2dInterface::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_graphics_objects_GraphicsObjectFactoryInterface_00024CppProxy_native_1createPolygonMask(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::GraphicsObjectFactoryInterface>(nativeRef);
        auto r = ref->createPolygonMask();
        return ::djinni::release(::djinni_generated::NativePolygon2dInterface::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_graphics_objects_GraphicsObjectFactoryInterface_00024CppProxy_native_1createText(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeShaderProgramInterface::JniType j_shader)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::GraphicsObjectFactoryInterface>(nativeRef);
        auto r = ref->createText(::djinni_generated::NativeShaderProgramInterface::toCpp(jniEnv, j_shader));
        return ::djinni::release(::djinni_generated::NativeTextInterface::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT ::djinni_generated::NativeRenderTargetTexture::JniType JNICALL Java_io_openmobilemaps_mapscore_shared_graphics_objects_GraphicsObjectFactoryInterface_00024CppProxy_native_1createRenderTargetTexture(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeVec2I::JniType j_size)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::GraphicsObjectFactoryInterface>(nativeRef);
        auto r = ref->createRenderTargetTexture(::djinni_generated::NativeVec2I::toCpp(jniEnv, j_size));
        return ::djinni::release(::djinni_generated::NativeRenderTargetTexture::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

} // namespace djinni_generated
