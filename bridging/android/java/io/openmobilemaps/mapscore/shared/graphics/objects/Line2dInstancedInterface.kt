// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from graphicsobjects.djinni

package io.openmobilemaps.mapscore.shared.graphics.objects

import com.snapchat.djinni.NativeObjectManager
import java.util.concurrent.atomic.AtomicBoolean

abstract class Line2dInstancedInterface {

    abstract fun setFrame(frame: io.openmobilemaps.mapscore.shared.graphics.common.Quad2dD)

    abstract fun setInstanceCount(count: Int)

    abstract fun setPositions(positions: io.openmobilemaps.mapscore.shared.graphics.common.SharedBytes)

    abstract fun asGraphicsObject(): GraphicsObjectInterface

    private class CppProxy : Line2dInstancedInterface {
        private val nativeRef: Long
        private val destroyed: AtomicBoolean = AtomicBoolean(false)

        private constructor(nativeRef: Long) {
            if (nativeRef == 0L) error("nativeRef is zero")
            this.nativeRef = nativeRef
            NativeObjectManager.register(this, nativeRef)
        }

        external fun nativeDestroy(nativeRef: Long)

        override fun setFrame(frame: io.openmobilemaps.mapscore.shared.graphics.common.Quad2dD) {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_setFrame(this.nativeRef, frame)
        }
        private external fun native_setFrame(_nativeRef: Long, frame: io.openmobilemaps.mapscore.shared.graphics.common.Quad2dD)

        override fun setInstanceCount(count: Int) {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_setInstanceCount(this.nativeRef, count)
        }
        private external fun native_setInstanceCount(_nativeRef: Long, count: Int)

        override fun setPositions(positions: io.openmobilemaps.mapscore.shared.graphics.common.SharedBytes) {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_setPositions(this.nativeRef, positions)
        }
        private external fun native_setPositions(_nativeRef: Long, positions: io.openmobilemaps.mapscore.shared.graphics.common.SharedBytes)

        override fun asGraphicsObject(): GraphicsObjectInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_asGraphicsObject(this.nativeRef)
        }
        private external fun native_asGraphicsObject(_nativeRef: Long): GraphicsObjectInterface
    }
}
