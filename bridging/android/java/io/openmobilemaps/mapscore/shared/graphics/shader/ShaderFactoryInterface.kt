// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from shader.djinni

package io.openmobilemaps.mapscore.shared.graphics.shader

import com.snapchat.djinni.NativeObjectManager
import java.util.concurrent.atomic.AtomicBoolean

abstract class ShaderFactoryInterface {

    abstract fun createAlphaShader(): AlphaShaderInterface

    abstract fun createUnitSphereAlphaShader(): AlphaShaderInterface

    abstract fun createAlphaInstancedShader(): AlphaInstancedShaderInterface

    abstract fun createLineGroupShader(): LineGroupShaderInterface

    abstract fun createUnitSphereColorShader(): ColorShaderInterface

    abstract fun createColorShader(): ColorShaderInterface

    abstract fun createColorCircleShader(): ColorCircleShaderInterface

    abstract fun createUnitSphereColorCircleShader(): ColorCircleShaderInterface

    abstract fun createPolygonGroupShader(isStriped: Boolean): PolygonGroupShaderInterface

    abstract fun createPolygonPatternGroupShader(fadeInPattern: Boolean): PolygonPatternGroupShaderInterface

    abstract fun createTextShader(): TextShaderInterface

    abstract fun createTextInstancedShader(): TextInstancedShaderInterface

    abstract fun createRasterShader(): RasterShaderInterface

    abstract fun createUnitSphereRasterShader(): RasterShaderInterface

    abstract fun createStretchShader(): StretchShaderInterface

    abstract fun createStretchInstancedShader(): StretchInstancedShaderInterface

    abstract fun createIcosahedronColorShader(): ColorShaderInterface

    private class CppProxy : ShaderFactoryInterface {
        private val nativeRef: Long
        private val destroyed: AtomicBoolean = AtomicBoolean(false)

        private constructor(nativeRef: Long) {
            if (nativeRef == 0L) error("nativeRef is zero")
            this.nativeRef = nativeRef
            NativeObjectManager.register(this, nativeRef)
        }

        companion object {
            @JvmStatic
            external fun nativeDestroy(nativeRef: Long)
        }

        override fun createAlphaShader(): AlphaShaderInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_createAlphaShader(this.nativeRef)
        }
        private external fun native_createAlphaShader(_nativeRef: Long): AlphaShaderInterface

        override fun createUnitSphereAlphaShader(): AlphaShaderInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_createUnitSphereAlphaShader(this.nativeRef)
        }
        private external fun native_createUnitSphereAlphaShader(_nativeRef: Long): AlphaShaderInterface

        override fun createAlphaInstancedShader(): AlphaInstancedShaderInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_createAlphaInstancedShader(this.nativeRef)
        }
        private external fun native_createAlphaInstancedShader(_nativeRef: Long): AlphaInstancedShaderInterface

        override fun createLineGroupShader(): LineGroupShaderInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_createLineGroupShader(this.nativeRef)
        }
        private external fun native_createLineGroupShader(_nativeRef: Long): LineGroupShaderInterface

        override fun createUnitSphereColorShader(): ColorShaderInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_createUnitSphereColorShader(this.nativeRef)
        }
        private external fun native_createUnitSphereColorShader(_nativeRef: Long): ColorShaderInterface

        override fun createColorShader(): ColorShaderInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_createColorShader(this.nativeRef)
        }
        private external fun native_createColorShader(_nativeRef: Long): ColorShaderInterface

        override fun createColorCircleShader(): ColorCircleShaderInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_createColorCircleShader(this.nativeRef)
        }
        private external fun native_createColorCircleShader(_nativeRef: Long): ColorCircleShaderInterface

        override fun createUnitSphereColorCircleShader(): ColorCircleShaderInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_createUnitSphereColorCircleShader(this.nativeRef)
        }
        private external fun native_createUnitSphereColorCircleShader(_nativeRef: Long): ColorCircleShaderInterface

        override fun createPolygonGroupShader(isStriped: Boolean): PolygonGroupShaderInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_createPolygonGroupShader(this.nativeRef, isStriped)
        }
        private external fun native_createPolygonGroupShader(_nativeRef: Long, isStriped: Boolean): PolygonGroupShaderInterface

        override fun createPolygonPatternGroupShader(fadeInPattern: Boolean): PolygonPatternGroupShaderInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_createPolygonPatternGroupShader(this.nativeRef, fadeInPattern)
        }
        private external fun native_createPolygonPatternGroupShader(_nativeRef: Long, fadeInPattern: Boolean): PolygonPatternGroupShaderInterface

        override fun createTextShader(): TextShaderInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_createTextShader(this.nativeRef)
        }
        private external fun native_createTextShader(_nativeRef: Long): TextShaderInterface

        override fun createTextInstancedShader(): TextInstancedShaderInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_createTextInstancedShader(this.nativeRef)
        }
        private external fun native_createTextInstancedShader(_nativeRef: Long): TextInstancedShaderInterface

        override fun createRasterShader(): RasterShaderInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_createRasterShader(this.nativeRef)
        }
        private external fun native_createRasterShader(_nativeRef: Long): RasterShaderInterface

        override fun createUnitSphereRasterShader(): RasterShaderInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_createUnitSphereRasterShader(this.nativeRef)
        }
        private external fun native_createUnitSphereRasterShader(_nativeRef: Long): RasterShaderInterface

        override fun createStretchShader(): StretchShaderInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_createStretchShader(this.nativeRef)
        }
        private external fun native_createStretchShader(_nativeRef: Long): StretchShaderInterface

        override fun createStretchInstancedShader(): StretchInstancedShaderInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_createStretchInstancedShader(this.nativeRef)
        }
        private external fun native_createStretchInstancedShader(_nativeRef: Long): StretchInstancedShaderInterface

        override fun createIcosahedronColorShader(): ColorShaderInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_createIcosahedronColorShader(this.nativeRef)
        }
        private external fun native_createIcosahedronColorShader(_nativeRef: Long): ColorShaderInterface
    }
}
