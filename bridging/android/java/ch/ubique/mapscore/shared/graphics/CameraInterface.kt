// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from core.djinni

package ch.ubique.mapscore.shared.graphics

import java.util.concurrent.atomic.AtomicBoolean

abstract class CameraInterface {

    abstract fun getMvpMatrix(): ArrayList<Float>

    abstract fun viewportSizeChanged()

    private class CppProxy : CameraInterface {
        private val nativeRef: Long
        private val destroyed: AtomicBoolean = AtomicBoolean(false)

        private constructor(nativeRef: Long) {
            if (nativeRef == 0L) error("nativeRef is zero")
            this.nativeRef = nativeRef
        }

        private external fun nativeDestroy(nativeRef: Long)
        fun _djinni_private_destroy() {
            val destroyed = this.destroyed.getAndSet(true)
            if (!destroyed) nativeDestroy(this.nativeRef)
        }
        protected fun finalize() {
            _djinni_private_destroy()
        }

        override fun getMvpMatrix(): ArrayList<Float> {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getMvpMatrix(this.nativeRef)
        }
        private external fun native_getMvpMatrix(_nativeRef: Long): ArrayList<Float>

        override fun viewportSizeChanged() {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_viewportSizeChanged(this.nativeRef)
        }
        private external fun native_viewportSizeChanged(_nativeRef: Long)
    }
}
