// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from icosahedron.djinni

#import "MCIcosahedronLayerCallbackInterface+Private.h"
#import "MCIcosahedronLayerCallbackInterface.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#import "DataRef_objc.hpp"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface MCIcosahedronLayerCallbackInterfaceCppProxy : NSObject<MCIcosahedronLayerCallbackInterface>

- (id)initWithCpp:(const std::shared_ptr<::IcosahedronLayerCallbackInterface>&)cppRef;

@end

@implementation MCIcosahedronLayerCallbackInterfaceCppProxy {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::IcosahedronLayerCallbackInterface>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::IcosahedronLayerCallbackInterface>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (nonnull NSData *)getData {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getData();
        return ::djinni::NativeDataRef::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

class IcosahedronLayerCallbackInterface::ObjcProxy final
: public ::IcosahedronLayerCallbackInterface
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::IcosahedronLayerCallbackInterface;
public:
    using ObjcProxyBase::ObjcProxyBase;
    ::djinni::DataRef getData() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() getData];
            return ::djinni::NativeDataRef::toCpp(objcpp_result_);
        }
    }
};

} // namespace djinni_generated

namespace djinni_generated {

auto IcosahedronLayerCallbackInterface::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    if ([(id)objc isKindOfClass:[MCIcosahedronLayerCallbackInterfaceCppProxy class]]) {
        return ((MCIcosahedronLayerCallbackInterfaceCppProxy*)objc)->_cppRefHandle.get();
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto IcosahedronLayerCallbackInterface::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    if (auto cppPtr = dynamic_cast<ObjcProxy*>(cpp.get())) {
        return cppPtr->djinni_private_get_proxied_objc_object();
    }
    return ::djinni::get_cpp_proxy<MCIcosahedronLayerCallbackInterfaceCppProxy>(cpp);
}

} // namespace djinni_generated

@end
