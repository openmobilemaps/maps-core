// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from map_helpers.djinni

#include "NativeCpuPerformanceLoggerInterface.h"  // my header
#include "Marshal.hpp"
#include "NativePerformanceLoggerInterface.h"

namespace djinni_generated {

NativeCpuPerformanceLoggerInterface::NativeCpuPerformanceLoggerInterface() : ::djinni::JniInterface<::CpuPerformanceLoggerInterface, NativeCpuPerformanceLoggerInterface>("io/openmobilemaps/mapscore/shared/map/CpuPerformanceLoggerInterface$CppProxy") {}

NativeCpuPerformanceLoggerInterface::~NativeCpuPerformanceLoggerInterface() = default;


CJNIEXPORT void JNICALL Java_io_openmobilemaps_mapscore_shared_map_CpuPerformanceLoggerInterface_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        delete reinterpret_cast<::djinni::CppProxyHandle<::CpuPerformanceLoggerInterface>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_map_CpuPerformanceLoggerInterface_create(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        auto r = ::CpuPerformanceLoggerInterface::create();
        return ::djinni::release(::djinni_generated::NativeCpuPerformanceLoggerInterface::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_map_CpuPerformanceLoggerInterface_createSpecifically(JNIEnv* jniEnv, jobject /*this*/, jint j_numBuckets, jlong j_bucketSizeMs)
{
    try {
        auto r = ::CpuPerformanceLoggerInterface::createSpecifically(::djinni::I32::toCpp(jniEnv, j_numBuckets),
                                                                     ::djinni::I64::toCpp(jniEnv, j_bucketSizeMs));
        return ::djinni::release(::djinni_generated::NativeCpuPerformanceLoggerInterface::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_map_CpuPerformanceLoggerInterface_00024CppProxy_native_1asPerformanceLoggerInterface(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::CpuPerformanceLoggerInterface>(nativeRef);
        auto r = ref->asPerformanceLoggerInterface();
        return ::djinni::release(::djinni_generated::NativePerformanceLoggerInterface::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

} // namespace djinni_generated
