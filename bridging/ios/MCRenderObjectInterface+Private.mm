// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from core.djinni

#import "MCRenderObjectInterface+Private.h"
#import "MCRenderObjectInterface.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#import "MCGraphicsObjectInterface+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface MCRenderObjectInterfaceCppProxy : NSObject<MCRenderObjectInterface>

- (id)initWithCpp:(const std::shared_ptr<::RenderObjectInterface>&)cppRef;

@end

@implementation MCRenderObjectInterfaceCppProxy {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::RenderObjectInterface>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::RenderObjectInterface>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (nullable id<MCGraphicsObjectInterface>)getGraphicsObject {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getGraphicsObject();
        return ::djinni_generated::GraphicsObjectInterface::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)hasCustomModelMatrix {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->hasCustomModelMatrix();
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)isScreenSpaceCoords {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->isScreenSpaceCoords();
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSArray<NSNumber *> *)getCustomModelMatrix {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getCustomModelMatrix();
        return ::djinni::List<::djinni::F32>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)setHidden:(BOOL)hidden {
    try {
        _cppRefHandle.get()->setHidden(::djinni::Bool::toCpp(hidden));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)isHidden {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->isHidden();
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

class RenderObjectInterface::ObjcProxy final
: public ::RenderObjectInterface
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::RenderObjectInterface;
public:
    using ObjcProxyBase::ObjcProxyBase;
    /*not-null*/ std::shared_ptr<::GraphicsObjectInterface> getGraphicsObject() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() getGraphicsObject];
            return ::djinni_generated::GraphicsObjectInterface::toCpp(objcpp_result_);
        }
    }
    bool hasCustomModelMatrix() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() hasCustomModelMatrix];
            return ::djinni::Bool::toCpp(objcpp_result_);
        }
    }
    bool isScreenSpaceCoords() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() isScreenSpaceCoords];
            return ::djinni::Bool::toCpp(objcpp_result_);
        }
    }
    std::vector<float> getCustomModelMatrix() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() getCustomModelMatrix];
            return ::djinni::List<::djinni::F32>::toCpp(objcpp_result_);
        }
    }
    void setHidden(bool c_hidden) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() setHidden:(::djinni::Bool::fromCpp(c_hidden))];
        }
    }
    bool isHidden() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() isHidden];
            return ::djinni::Bool::toCpp(objcpp_result_);
        }
    }
};

} // namespace djinni_generated

namespace djinni_generated {

auto RenderObjectInterface::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    if ([(id)objc isKindOfClass:[MCRenderObjectInterfaceCppProxy class]]) {
        return ((MCRenderObjectInterfaceCppProxy*)objc)->_cppRefHandle.get();
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto RenderObjectInterface::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    if (auto cppPtr = dynamic_cast<ObjcProxy*>(cpp.get())) {
        return cppPtr->djinni_private_get_proxied_objc_object();
    }
    return ::djinni::get_cpp_proxy<MCRenderObjectInterfaceCppProxy>(cpp);
}

} // namespace djinni_generated

@end
