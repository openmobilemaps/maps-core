// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from network_activity_manager.djinni

#include "NativeNetworkActivityListener.h"  // my header
#include "Marshal.hpp"
#include "NativeTasksProgressInfo.h"
#include "NativeTiledLayerError.h"

namespace djinni_generated {

NativeNetworkActivityListener::NativeNetworkActivityListener() : ::djinni::JniInterface<::NetworkActivityListener, NativeNetworkActivityListener>("io/openmobilemaps/mapscore/shared/map/NetworkActivityListener$CppProxy") {}

NativeNetworkActivityListener::~NativeNetworkActivityListener() = default;

NativeNetworkActivityListener::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeNetworkActivityListener::JavaProxy::~JavaProxy() = default;

void NativeNetworkActivityListener::JavaProxy::onTiledLayerErrorStateChanged(const std::vector<::TiledLayerError> & c_errors) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeNetworkActivityListener>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onTiledLayerErrorStateChanged,
                           ::djinni::get(::djinni::List<::djinni_generated::NativeTiledLayerError>::fromCpp(jniEnv, c_errors)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeNetworkActivityListener::JavaProxy::onTasksProgressChanged(float c_totalProgress, const std::vector<::TasksProgressInfo> & c_tasksProgressInfos) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeNetworkActivityListener>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onTasksProgressChanged,
                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c_totalProgress)),
                           ::djinni::get(::djinni::List<::djinni_generated::NativeTasksProgressInfo>::fromCpp(jniEnv, c_tasksProgressInfos)));
    ::djinni::jniExceptionCheck(jniEnv);
}

CJNIEXPORT void JNICALL Java_io_openmobilemaps_mapscore_shared_map_NetworkActivityListener_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::NetworkActivityListener>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_io_openmobilemaps_mapscore_shared_map_NetworkActivityListener_00024CppProxy_native_1onTiledLayerErrorStateChanged(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_errors)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::NetworkActivityListener>(nativeRef);
        ref->onTiledLayerErrorStateChanged(::djinni::List<::djinni_generated::NativeTiledLayerError>::toCpp(jniEnv, j_errors));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_io_openmobilemaps_mapscore_shared_map_NetworkActivityListener_00024CppProxy_native_1onTasksProgressChanged(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jfloat j_totalProgress, jobject j_tasksProgressInfos)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::NetworkActivityListener>(nativeRef);
        ref->onTasksProgressChanged(::djinni::F32::toCpp(jniEnv, j_totalProgress),
                                    ::djinni::List<::djinni_generated::NativeTasksProgressInfo>::toCpp(jniEnv, j_tasksProgressInfos));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
