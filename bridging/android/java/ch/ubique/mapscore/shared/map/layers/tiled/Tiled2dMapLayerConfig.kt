// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from tiled_layer.djinni

package ch.ubique.mapscore.shared.map.layers.tiled

import java.util.concurrent.atomic.AtomicBoolean

abstract class Tiled2dMapLayerConfig {

    abstract fun getBounds(): ch.ubique.mapscore.shared.map.coordinates.RectCoord

    abstract fun getTileUrl(x: Int, y: Int, zoom: Int): String

    abstract fun getTileIdentifier(x: Int, y: Int, zoom: Int): String

    abstract fun getZoomLevelInfos(): ArrayList<Tiled2dMapZoomLevelInfo>

    abstract fun getZoomInfo(): Tiled2dMapZoomInfo

    private class CppProxy : Tiled2dMapLayerConfig {
        private val nativeRef: Long
        private val destroyed: AtomicBoolean = AtomicBoolean(false)

        private constructor(nativeRef: Long) {
            if (nativeRef == 0L) error("nativeRef is zero")
            this.nativeRef = nativeRef
        }

        private external fun nativeDestroy(nativeRef: Long)
        fun _djinni_private_destroy() {
            val destroyed = this.destroyed.getAndSet(true)
            if (!destroyed) nativeDestroy(this.nativeRef)
        }
        protected fun finalize() {
            _djinni_private_destroy()
        }

        override fun getBounds(): ch.ubique.mapscore.shared.map.coordinates.RectCoord {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getBounds(this.nativeRef)
        }
        private external fun native_getBounds(_nativeRef: Long): ch.ubique.mapscore.shared.map.coordinates.RectCoord

        override fun getTileUrl(x: Int, y: Int, zoom: Int): String {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getTileUrl(this.nativeRef, x, y, zoom)
        }
        private external fun native_getTileUrl(_nativeRef: Long, x: Int, y: Int, zoom: Int): String

        override fun getTileIdentifier(x: Int, y: Int, zoom: Int): String {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getTileIdentifier(this.nativeRef, x, y, zoom)
        }
        private external fun native_getTileIdentifier(_nativeRef: Long, x: Int, y: Int, zoom: Int): String

        override fun getZoomLevelInfos(): ArrayList<Tiled2dMapZoomLevelInfo> {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getZoomLevelInfos(this.nativeRef)
        }
        private external fun native_getZoomLevelInfos(_nativeRef: Long): ArrayList<Tiled2dMapZoomLevelInfo>

        override fun getZoomInfo(): Tiled2dMapZoomInfo {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getZoomInfo(this.nativeRef)
        }
        private external fun native_getZoomInfo(_nativeRef: Long): Tiled2dMapZoomInfo
    }
}
