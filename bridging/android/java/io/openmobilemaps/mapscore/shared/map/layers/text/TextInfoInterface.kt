// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from text.djinni

package io.openmobilemaps.mapscore.shared.map.layers.text

import com.snapchat.djinni.NativeObjectManager
import java.util.concurrent.atomic.AtomicBoolean

abstract class TextInfoInterface {

    abstract fun getText(): ArrayList<FormattedStringEntry>

    abstract fun getCoordinate(): io.openmobilemaps.mapscore.shared.map.coordinates.Coord

    abstract fun getFont(): io.openmobilemaps.mapscore.shared.map.loader.Font

    abstract fun getTextAnchor(): Anchor

    abstract fun getTextJustify(): TextJustify

    abstract fun getSymbolPlacement(): TextSymbolPlacement

    abstract fun getLineCoordinates(): ArrayList<io.openmobilemaps.mapscore.shared.map.coordinates.Coord>?

    private class CppProxy : TextInfoInterface {
        private val nativeRef: Long
        private val destroyed: AtomicBoolean = AtomicBoolean(false)

        private constructor(nativeRef: Long) {
            if (nativeRef == 0L) error("nativeRef is zero")
            this.nativeRef = nativeRef
            NativeObjectManager.register(this, nativeRef)
        }

        external fun nativeDestroy(nativeRef: Long)

        override fun getText(): ArrayList<FormattedStringEntry> {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getText(this.nativeRef)
        }
        private external fun native_getText(_nativeRef: Long): ArrayList<FormattedStringEntry>

        override fun getCoordinate(): io.openmobilemaps.mapscore.shared.map.coordinates.Coord {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getCoordinate(this.nativeRef)
        }
        private external fun native_getCoordinate(_nativeRef: Long): io.openmobilemaps.mapscore.shared.map.coordinates.Coord

        override fun getFont(): io.openmobilemaps.mapscore.shared.map.loader.Font {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getFont(this.nativeRef)
        }
        private external fun native_getFont(_nativeRef: Long): io.openmobilemaps.mapscore.shared.map.loader.Font

        override fun getTextAnchor(): Anchor {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getTextAnchor(this.nativeRef)
        }
        private external fun native_getTextAnchor(_nativeRef: Long): Anchor

        override fun getTextJustify(): TextJustify {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getTextJustify(this.nativeRef)
        }
        private external fun native_getTextJustify(_nativeRef: Long): TextJustify

        override fun getSymbolPlacement(): TextSymbolPlacement {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getSymbolPlacement(this.nativeRef)
        }
        private external fun native_getSymbolPlacement(_nativeRef: Long): TextSymbolPlacement

        override fun getLineCoordinates(): ArrayList<io.openmobilemaps.mapscore.shared.map.coordinates.Coord>? {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getLineCoordinates(this.nativeRef)
        }
        private external fun native_getLineCoordinates(_nativeRef: Long): ArrayList<io.openmobilemaps.mapscore.shared.map.coordinates.Coord>?
    }
}
