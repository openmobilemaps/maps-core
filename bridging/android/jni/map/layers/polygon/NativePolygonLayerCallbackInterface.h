// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from polygon.djinni

#pragma once

#include "PolygonLayerCallbackInterface.h"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativePolygonLayerCallbackInterface final : ::djinni::JniInterface<::PolygonLayerCallbackInterface, NativePolygonLayerCallbackInterface> {
public:
    using CppType = std::shared_ptr<::PolygonLayerCallbackInterface>;
    using CppOptType = std::shared_ptr<::PolygonLayerCallbackInterface>;
    using JniType = jobject;

    using Boxed = NativePolygonLayerCallbackInterface;

    ~NativePolygonLayerCallbackInterface();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativePolygonLayerCallbackInterface>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativePolygonLayerCallbackInterface>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativePolygonLayerCallbackInterface();
    friend ::djinni::JniClass<NativePolygonLayerCallbackInterface>;
    friend ::djinni::JniInterface<::PolygonLayerCallbackInterface, NativePolygonLayerCallbackInterface>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::PolygonLayerCallbackInterface
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        bool onClickConfirmed(const ::PolygonInfo & polygon) override;
        bool onClickUnconfirmed(const ::PolygonInfo & polygon) override;

    private:
        friend ::djinni::JniInterface<::PolygonLayerCallbackInterface, ::djinni_generated::NativePolygonLayerCallbackInterface>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("io/openmobilemaps/mapscore/shared/map/layers/polygon/PolygonLayerCallbackInterface") };
    const jmethodID method_onClickConfirmed { ::djinni::jniGetMethodID(clazz.get(), "onClickConfirmed", "(Lio/openmobilemaps/mapscore/shared/map/layers/polygon/PolygonInfo;)Z") };
    const jmethodID method_onClickUnconfirmed { ::djinni::jniGetMethodID(clazz.get(), "onClickUnconfirmed", "(Lio/openmobilemaps/mapscore/shared/map/layers/polygon/PolygonInfo;)Z") };
};

} // namespace djinni_generated
