// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from text.djinni

#include "NativeTextFactory.h"  // my header
#include "Marshal.hpp"
#include "NativeAnchor.h"
#include "NativeCoord.h"
#include "NativeFont.h"
#include "NativeFormattedStringEntry.h"
#include "NativeTextInfoInterface.h"
#include "NativeTextJustify.h"

namespace djinni_generated {

NativeTextFactory::NativeTextFactory() : ::djinni::JniInterface<::TextFactory, NativeTextFactory>("io/openmobilemaps/mapscore/shared/map/layers/text/TextFactory$CppProxy") {}

NativeTextFactory::~NativeTextFactory() = default;


CJNIEXPORT void JNICALL Java_io_openmobilemaps_mapscore_shared_map_layers_text_TextFactory_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::TextFactory>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_map_layers_text_TextFactory_00024CppProxy_createText(JNIEnv* jniEnv, jobject /*this*/, jobject j_text, ::djinni_generated::NativeCoord::JniType j_coordinate, ::djinni_generated::NativeFont::JniType j_font, jobject j_textAnchor, jobject j_textJustify)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::TextFactory::createText(::djinni::List<::djinni_generated::NativeFormattedStringEntry>::toCpp(jniEnv, j_text),
                                           ::djinni_generated::NativeCoord::toCpp(jniEnv, j_coordinate),
                                           ::djinni_generated::NativeFont::toCpp(jniEnv, j_font),
                                           ::djinni_generated::NativeAnchor::toCpp(jniEnv, j_textAnchor),
                                           ::djinni_generated::NativeTextJustify::toCpp(jniEnv, j_textJustify));
        return ::djinni::release(::djinni_generated::NativeTextInfoInterface::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
