// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from core.djinni

package ch.ubique.mapscore.shared.graphics;

import java.util.concurrent.atomic.AtomicBoolean;

public abstract class RenderingContextInterface {
    /** Ensure calling on graphics thread */
    public abstract void onSurfaceCreated();

    /** Ensure calling on graphics thread */
    public abstract void setViewportSize(ch.ubique.mapscore.shared.graphics.common.Vec2I size);

    public abstract ch.ubique.mapscore.shared.graphics.common.Vec2I getViewportSize();

    public abstract void clearWithColor(float r, float g, float b, float a);

    private static final class CppProxy extends RenderingContextInterface
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void _djinni_private_destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            _djinni_private_destroy();
            super.finalize();
        }

        @Override
        public void onSurfaceCreated()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_onSurfaceCreated(this.nativeRef);
        }
        private native void native_onSurfaceCreated(long _nativeRef);

        @Override
        public void setViewportSize(ch.ubique.mapscore.shared.graphics.common.Vec2I size)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_setViewportSize(this.nativeRef, size);
        }
        private native void native_setViewportSize(long _nativeRef, ch.ubique.mapscore.shared.graphics.common.Vec2I size);

        @Override
        public ch.ubique.mapscore.shared.graphics.common.Vec2I getViewportSize()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getViewportSize(this.nativeRef);
        }
        private native ch.ubique.mapscore.shared.graphics.common.Vec2I native_getViewportSize(long _nativeRef);

        @Override
        public void clearWithColor(float r, float g, float b, float a)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_clearWithColor(this.nativeRef, r, g, b, a);
        }
        private native void native_clearWithColor(long _nativeRef, float r, float g, float b, float a);
    }
}
