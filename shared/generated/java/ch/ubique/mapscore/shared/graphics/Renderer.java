// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from renderer.djinni

package ch.ubique.mapscore.shared.graphics;

import java.util.concurrent.atomic.AtomicBoolean;

public abstract class Renderer {
    public abstract void addToRenderQueue(RenderPass renderPass);

    /** Ensure calling on graphics thread */
    public abstract void drawFrame(RenderingContext renderingContext, Camera camera);

    private static final class CppProxy extends Renderer
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void _djinni_private_destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            _djinni_private_destroy();
            super.finalize();
        }

        @Override
        public void addToRenderQueue(RenderPass renderPass)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_addToRenderQueue(this.nativeRef, renderPass);
        }
        private native void native_addToRenderQueue(long _nativeRef, RenderPass renderPass);

        @Override
        public void drawFrame(RenderingContext renderingContext, Camera camera)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_drawFrame(this.nativeRef, renderingContext, camera);
        }
        private native void native_drawFrame(long _nativeRef, RenderingContext renderingContext, Camera camera);
    }
}
