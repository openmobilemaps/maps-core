// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from icon.djinni

package io.openmobilemaps.mapscore.shared.map.layers.icon

import java.util.concurrent.atomic.AtomicBoolean

abstract class IconLayerCallbackInterface {

    abstract fun onClickConfirmed(icons: ArrayList<IconInfoInterface>): Boolean

    abstract fun onLongpress(coordinate: io.openmobilemaps.mapscore.shared.map.coordinates.Coord, icons: ArrayList<IconInfoInterface>?): Boolean

    private class CppProxy : IconLayerCallbackInterface {
        private val nativeRef: Long
        private val destroyed: AtomicBoolean = AtomicBoolean(false)

        private constructor(nativeRef: Long) {
            if (nativeRef == 0L) error("nativeRef is zero")
            this.nativeRef = nativeRef
        }

        private external fun nativeDestroy(nativeRef: Long)
        fun _djinni_private_destroy() {
            val destroyed = this.destroyed.getAndSet(true)
            if (!destroyed) nativeDestroy(this.nativeRef)
        }
        protected fun finalize() {
            _djinni_private_destroy()
        }

        override fun onClickConfirmed(icons: ArrayList<IconInfoInterface>): Boolean {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_onClickConfirmed(this.nativeRef, icons)
        }
        private external fun native_onClickConfirmed(_nativeRef: Long, icons: ArrayList<IconInfoInterface>): Boolean

        override fun onLongpress(coordinate: io.openmobilemaps.mapscore.shared.map.coordinates.Coord, icons: ArrayList<IconInfoInterface>?): Boolean {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_onLongpress(this.nativeRef, coordinate, icons)
        }
        private external fun native_onLongpress(_nativeRef: Long, coordinate: io.openmobilemaps.mapscore.shared.map.coordinates.Coord, icons: ArrayList<IconInfoInterface>?): Boolean
    }
}
