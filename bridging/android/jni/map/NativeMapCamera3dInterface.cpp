// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from core.djinni

#include "NativeMapCamera3dInterface.h"  // my header
#include "Marshal.hpp"
#include "NativeCamera3dConfig.h"
#include "NativeCoord.h"

namespace djinni_generated {

NativeMapCamera3dInterface::NativeMapCamera3dInterface() : ::djinni::JniInterface<::MapCamera3dInterface, NativeMapCamera3dInterface>("io/openmobilemaps/mapscore/shared/map/MapCamera3dInterface$CppProxy") {}

NativeMapCamera3dInterface::~NativeMapCamera3dInterface() = default;


CJNIEXPORT void JNICALL Java_io_openmobilemaps_mapscore_shared_map_MapCamera3dInterface_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        delete reinterpret_cast<::djinni::CppProxyHandle<::MapCamera3dInterface>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_map_MapCamera3dInterface_00024CppProxy_native_1getCameraConfig(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::MapCamera3dInterface>(nativeRef);
        auto r = ref->getCameraConfig();
        return ::djinni::release(::djinni_generated::NativeCamera3dConfig::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_io_openmobilemaps_mapscore_shared_map_MapCamera3dInterface_00024CppProxy_native_1setCameraConfig(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_config, jobject j_durationSeconds, jobject j_targetZoom, ::djinni_generated::NativeCoord::Boxed::JniType j_targetCoordinate)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::MapCamera3dInterface>(nativeRef);
        ref->setCameraConfig(::djinni_generated::NativeCamera3dConfig::toCpp(jniEnv, j_config),
                             ::djinni::Optional<std::optional, ::djinni::F32>::toCpp(jniEnv, j_durationSeconds),
                             ::djinni::Optional<std::optional, ::djinni::F32>::toCpp(jniEnv, j_targetZoom),
                             ::djinni::Optional<std::optional, ::djinni_generated::NativeCoord>::toCpp(jniEnv, j_targetCoordinate));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_io_openmobilemaps_mapscore_shared_map_MapCamera3dInterface_00024CppProxy_native_1setHardwareVpMatrix(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_vpMatrix)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::MapCamera3dInterface>(nativeRef);
        ref->setHardwareVpMatrix(::djinni::List<::djinni::F64>::toCpp(jniEnv, j_vpMatrix));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

} // namespace djinni_generated
