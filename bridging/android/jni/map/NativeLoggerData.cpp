// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from map_helpers.djinni

#include "NativeLoggerData.h"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeLoggerData::NativeLoggerData() = default;

NativeLoggerData::~NativeLoggerData() = default;

auto NativeLoggerData::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeLoggerData>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.id)),
                                                           ::djinni::get(::djinni::List<::djinni::I64>::fromCpp(jniEnv, c.buckets)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.bucketSizeMs)),
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.start)),
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.end)),
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.numSamples)),
                                                           ::djinni::get(::djinni::F64::fromCpp(jniEnv, c.average)),
                                                           ::djinni::get(::djinni::F64::fromCpp(jniEnv, c.variance)),
                                                           ::djinni::get(::djinni::F64::fromCpp(jniEnv, c.stdDeviation)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeLoggerData::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeLoggerData>::get();
    return {::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_id)),
            ::djinni::List<::djinni::I64>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_buckets)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_bucketSizeMs)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_start)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_end)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_numSamples)),
            ::djinni::F64::toCpp(jniEnv, jniEnv->GetDoubleField(j, data.field_average)),
            ::djinni::F64::toCpp(jniEnv, jniEnv->GetDoubleField(j, data.field_variance)),
            ::djinni::F64::toCpp(jniEnv, jniEnv->GetDoubleField(j, data.field_stdDeviation))};
}

} // namespace djinni_generated
