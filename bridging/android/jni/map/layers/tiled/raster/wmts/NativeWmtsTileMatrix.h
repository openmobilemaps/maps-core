// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from wmts_capabilities.djinni

#pragma once

#include "WmtsTileMatrix.h"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeWmtsTileMatrix final {
public:
    using CppType = ::WmtsTileMatrix;
    using JniType = jobject;

    using Boxed = NativeWmtsTileMatrix;

    ~NativeWmtsTileMatrix();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeWmtsTileMatrix();
    friend ::djinni::JniClass<NativeWmtsTileMatrix>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("io/openmobilemaps/mapscore/shared/map/layers/tiled/raster/wmts/WmtsTileMatrix") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;DDDIIII)V") };
    const jfieldID field_identifier { ::djinni::jniGetFieldID(clazz.get(), "identifier", "Ljava/lang/String;") };
    const jfieldID field_scaleDenominator { ::djinni::jniGetFieldID(clazz.get(), "scaleDenominator", "D") };
    const jfieldID field_topLeftCornerX { ::djinni::jniGetFieldID(clazz.get(), "topLeftCornerX", "D") };
    const jfieldID field_topLeftCornerY { ::djinni::jniGetFieldID(clazz.get(), "topLeftCornerY", "D") };
    const jfieldID field_tileWidth { ::djinni::jniGetFieldID(clazz.get(), "tileWidth", "I") };
    const jfieldID field_tileHeight { ::djinni::jniGetFieldID(clazz.get(), "tileHeight", "I") };
    const jfieldID field_matrixWidth { ::djinni::jniGetFieldID(clazz.get(), "matrixWidth", "I") };
    const jfieldID field_matrixHeight { ::djinni::jniGetFieldID(clazz.get(), "matrixHeight", "I") };
};

}  // namespace djinni_generated
