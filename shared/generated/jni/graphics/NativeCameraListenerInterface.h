// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from core.djinni

#pragma once

#include "CameraListenerInterface.h"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeCameraListenerInterface final : ::djinni::JniInterface<::CameraListenerInterface, NativeCameraListenerInterface> {
public:
    using CppType = std::shared_ptr<::CameraListenerInterface>;
    using CppOptType = std::shared_ptr<::CameraListenerInterface>;
    using JniType = jobject;

    using Boxed = NativeCameraListenerInterface;

    ~NativeCameraListenerInterface();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeCameraListenerInterface>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeCameraListenerInterface>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeCameraListenerInterface();
    friend ::djinni::JniClass<NativeCameraListenerInterface>;
    friend ::djinni::JniInterface<::CameraListenerInterface, NativeCameraListenerInterface>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::CameraListenerInterface
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void onPositionChanged(const ::Vec3F & position) override;

    private:
        friend ::djinni::JniInterface<::CameraListenerInterface, ::djinni_generated::NativeCameraListenerInterface>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("ch/ubique/mapscore/shared/graphics/CameraListenerInterface") };
    const jmethodID method_onPositionChanged { ::djinni::jniGetMethodID(clazz.get(), "onPositionChanged", "(Lch/ubique/mapscore/shared/graphics/common/Vec3F;)V") };
};

}  // namespace djinni_generated
