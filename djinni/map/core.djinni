@extern "../yaml/vec_2_d.yaml"
@extern "../yaml/scheduler_interface.yaml"
@extern "../yaml/touch_handler_interface.yaml"
@extern "../yaml/shader_factory_interface.yaml"
@extern "../yaml/graphics_object_factory_interface.yaml"
@extern "../yaml/camera_interface.yaml"
@extern "../yaml/loader_interface.yaml"
@extern "../yaml/layer_interface.yaml"
@extern "../yaml/scene_interface.yaml"
@extern "../yaml/rendering_context_interface.yaml"
@extern "../yaml/map_coordinate_system.yaml"
@extern "../yaml/coordinate_conversion_helper_interface.yaml"

map_interface = interface +c {
    static create(graphics_factory: graphics_object_factory_interface, shader_factory: shader_factory_interface, rendering_context: rendering_context_interface, map_config: map_config, scheduler: scheduler_interface) : map_interface;
    static createWithOpenGl(map_config: map_config, scheduler: scheduler_interface) : map_interface;

    set_callback_handler(callback_interface: map_callback_interface);
    set_loader(loader: loader_interface);

    get_graphics_object_factory() : graphics_object_factory_interface;
    get_shader_factory() : shader_factory_interface;

    get_scheduler() : scheduler_interface;
    get_rendering_context() : rendering_context_interface;
    get_map_config() : map_config;
    get_coordinate_converter_helper() : coordinate_conversion_helper_interface;

    set_camera(camera: camera_interface);
    get_camera() : camera_interface;

    add_default_touch_handler(density: f32);
    set_touch_handler(touch_handler: touch_handler_interface);
    get_touch_handler() : touch_handler_interface;

    add_layer(layer: layer_interface);
    remove_layer(layer: layer_interface);

    invalidate();
    draw_frame();
    resume();
    pause();
}

map_callback_interface = interface +c +j +o {
    invalidate();
}

map_config = record {
    map_coordinate_system: map_coordinate_system;
    zoom_min: f64;
    zoom_max: f64;
}

map_camera_2d_interface = interface +c {
    static create(map_interface: map_interface, screen_density_ppi: f32): map_camera_2d_interface;

    move_to_center_position_zoom(center_position: vec_2_d, zoom: f64, animated: bool);
    move_to_center_position(center_position: vec_2_d, animated: bool);
    get_center_position(): vec_2_d;

    set_zoom(zoom: f64, animated: bool);
    get_zoom(): f64;

    set_padding_left(padding: f32);
    set_padding_right(padding: f32);
    set_padding_top(padding: f32);
    set_padding_bottom(padding: f32);

    
    add_listener(listener: map_camera_2d_listener_interface);
    remove_listener(listener: map_camera_2d_listener_interface);

    as_camera_interface(): camera_interface;
}

map_camera_2d_listener_interface = interface +c +j +o {
    on_center_position_changed(position: vec_2_d, zoom: f64);
}
