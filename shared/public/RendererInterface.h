// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from core.djinni

#pragma once

#include <memory>
#include <vector>

class CameraInterface;
class RenderingContextInterface;
struct RenderTask;

class RendererInterface {
public:
    virtual ~RendererInterface() = default;

    virtual void addToRenderQueue(const std::vector<RenderTask> & tasks) = 0;

    /** Ensure calling on graphics thread */
    virtual void drawFrame(const /*not-null*/ std::shared_ptr<RenderingContextInterface> & renderingContext, const /*not-null*/ std::shared_ptr<CameraInterface> & camera) = 0;
};
