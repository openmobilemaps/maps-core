// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from network_activity_manager.djinni

#pragma once

#include "NetworkActivityListener.h"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeNetworkActivityListener final : ::djinni::JniInterface<::NetworkActivityListener, NativeNetworkActivityListener> {
public:
    using CppType = std::shared_ptr<::NetworkActivityListener>;
    using CppOptType = std::shared_ptr<::NetworkActivityListener>;
    using JniType = jobject;

    using Boxed = NativeNetworkActivityListener;

    ~NativeNetworkActivityListener();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeNetworkActivityListener>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeNetworkActivityListener>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeNetworkActivityListener();
    friend ::djinni::JniClass<NativeNetworkActivityListener>;
    friend ::djinni::JniInterface<::NetworkActivityListener, NativeNetworkActivityListener>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::NetworkActivityListener
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void onTiledLayerErrorStateChanged(const std::vector<::TiledLayerError> & errors) override;
        void onRemainingTasksChanged(const std::vector<::RemainingTasksInfo> & remainingTasks) override;

    private:
        friend ::djinni::JniInterface<::NetworkActivityListener, ::djinni_generated::NativeNetworkActivityListener>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("io/openmobilemaps/mapscore/shared/map/NetworkActivityListener") };
    const jmethodID method_onTiledLayerErrorStateChanged { ::djinni::jniGetMethodID(clazz.get(), "onTiledLayerErrorStateChanged", "(Ljava/util/ArrayList;)V") };
    const jmethodID method_onRemainingTasksChanged { ::djinni::jniGetMethodID(clazz.get(), "onRemainingTasksChanged", "(Ljava/util/ArrayList;)V") };
};

}  // namespace djinni_generated
