// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from tiled_raster_layer.djinni

#include "NativeTiled2dMapRasterLayerShaderFactory.h"  // my header
#include "NativeAlphaShaderInterface.h"
#include "NativeInterpolationShaderInterface.h"

namespace djinni_generated {

NativeTiled2dMapRasterLayerShaderFactory::NativeTiled2dMapRasterLayerShaderFactory() : ::djinni::JniInterface<::Tiled2dMapRasterLayerShaderFactory, NativeTiled2dMapRasterLayerShaderFactory>("io/openmobilemaps/mapscore/shared/map/layers/tiled/raster/Tiled2dMapRasterLayerShaderFactory$CppProxy") {}

NativeTiled2dMapRasterLayerShaderFactory::~NativeTiled2dMapRasterLayerShaderFactory() = default;

NativeTiled2dMapRasterLayerShaderFactory::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeTiled2dMapRasterLayerShaderFactory::JavaProxy::~JavaProxy() = default;

std::shared_ptr<::AlphaShaderInterface> NativeTiled2dMapRasterLayerShaderFactory::JavaProxy::combineShader() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeTiled2dMapRasterLayerShaderFactory>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_combineShader);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativeAlphaShaderInterface::toCpp(jniEnv, jret);
}
std::shared_ptr<::InterpolationShaderInterface> NativeTiled2dMapRasterLayerShaderFactory::JavaProxy::finalShader() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeTiled2dMapRasterLayerShaderFactory>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_finalShader);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativeInterpolationShaderInterface::toCpp(jniEnv, jret);
}

CJNIEXPORT void JNICALL Java_io_openmobilemaps_mapscore_shared_map_layers_tiled_raster_Tiled2dMapRasterLayerShaderFactory_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::Tiled2dMapRasterLayerShaderFactory>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT ::djinni_generated::NativeAlphaShaderInterface::JniType JNICALL Java_io_openmobilemaps_mapscore_shared_map_layers_tiled_raster_Tiled2dMapRasterLayerShaderFactory_00024CppProxy_native_1combineShader(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Tiled2dMapRasterLayerShaderFactory>(nativeRef);
        auto r = ref->combineShader();
        return ::djinni::release(::djinni_generated::NativeAlphaShaderInterface::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT ::djinni_generated::NativeInterpolationShaderInterface::JniType JNICALL Java_io_openmobilemaps_mapscore_shared_map_layers_tiled_raster_Tiled2dMapRasterLayerShaderFactory_00024CppProxy_native_1finalShader(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::Tiled2dMapRasterLayerShaderFactory>(nativeRef);
        auto r = ref->finalShader();
        return ::djinni::release(::djinni_generated::NativeInterpolationShaderInterface::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
