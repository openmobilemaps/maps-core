// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from core.djinni

#include "NativeRenderPassConfig.h"  // my header
#include "Marshal.hpp"
#include "NativeRenderTargetInterface.h"

namespace djinni_generated {

NativeRenderPassConfig::NativeRenderPassConfig() = default;

NativeRenderPassConfig::~NativeRenderPassConfig() = default;

auto NativeRenderPassConfig::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeRenderPassConfig>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.renderPassIndex)),
                                                           ::djinni::get(::djinni::Bool::fromCpp(jniEnv, c.isPassMasked)),
                                                           ::djinni::get(::djinni::Optional<std::optional, ::djinni_generated::NativeRenderTargetInterface>::fromCpp(jniEnv, c.renderTarget)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeRenderPassConfig::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 4);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeRenderPassConfig>::get();
    return {::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_renderPassIndex)),
            ::djinni::Bool::toCpp(jniEnv, jniEnv->GetBooleanField(j, data.field_isPassMasked)),
            ::djinni::Optional<std::optional, ::djinni_generated::NativeRenderTargetInterface>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_renderTarget))};
}

} // namespace djinni_generated
