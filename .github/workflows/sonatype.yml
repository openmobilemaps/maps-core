name: Upload AAR to Sonatype Nexus

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    name: "Upload AAR to Sonatype Nexus"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 17
      - name: Set Build Variables
        id: vars
        run: |
          artifactId=$(sed -n -e 's/^POM_ARTIFACT_ID=//p' android/gradle.properties)
          echo "artifactId=$artifactId" >> "$GITHUB_OUTPUT"
          version=$(sed -n -e 's/^VERSION_NAME=//p' android/gradle.properties)
          echo "version=$version" >> "$GITHUB_OUTPUT"
      - name: Build and Upload to Ubique Maven
        env:
          SIGNING_KEY_ARMOR: ${{secrets.MAVEN_SIGNING_KEY_ARMOR_BASE64}}
          SIGNING_KEY_ID: ${{secrets.MAVEN_SIGNING_KEY_ID}}
          SIGNING_KEY_PASSWORD: ${{secrets.MAVEN_SIGNING_KEY_PASSPHRASE}}
          UBIQUE_ARTIFACTORY_URL: ${{secrets.UBIQUE_ARTIFACTORY_URL}}
          UBIQUE_ARTIFACTORY_USER: ${{secrets.UBIQUE_ARTIFACTORY_USER}}
          UBIQUE_ARTIFACTORY_PASS: ${{secrets.UBIQUE_ARTIFACTORY_PASS}}
        run: |
          echo "Create .gpg key from secret"
          echo $SIGNING_KEY_ARMOR | base64 --decode > ./signingkey.asc
          gpg --quiet --output $GITHUB_WORKSPACE/signingkey.gpg --dearmor ./signingkey.asc

          cd android
          echo "### Maven Dependency - Ubique Maven" >> $GITHUB_STEP_SUMMARY
          ./gradlew publishAllPublicationsToUbiqueMavenRepository -Psigning.secretKeyRingFile=$GITHUB_WORKSPACE/signingkey.gpg -Psigning.password=$SIGNING_KEY_PASSWORD -Psigning.keyId=$SIGNING_KEY_ID
              echo "| Git Commit | Artifact ID | Maven Version |" >> $GITHUB_STEP_SUMMARY
              echo "| --- | --- | --- |" >> $GITHUB_STEP_SUMMARY
              echo "| $GITHUB_SHA | ${{ steps.vars.outputs.artifactId }} | ${{ steps.vars.outputs.version }} |" >> $GITHUB_STEP_SUMMARY
      - name: Build and Upload to Maven Central
        env:
          SIGNING_KEY_ID: ${{secrets.MAVEN_SIGNING_KEY_ID}}
          SIGNING_KEY_PASSWORD: ${{secrets.MAVEN_SIGNING_KEY_PASSPHRASE}}
          SONATYPE_NEXUS_USERNAME: ${{secrets.SONATYPE_NEXUS_USERNAME}}
          SONATYPE_NEXUS_PASSWORD: ${{secrets.SONATYPE_NEXUS_PASSWORD}}
          UBIQUE_ARTIFACTORY_URL: ${{secrets.UBIQUE_ARTIFACTORY_URL}}
          UBIQUE_ARTIFACTORY_USER: ${{secrets.UBIQUE_ARTIFACTORY_USER}}
          UBIQUE_ARTIFACTORY_PASS: ${{secrets.UBIQUE_ARTIFACTORY_PASS}}
        run: |
          cd android
          echo "### Maven Dependency - Maven Central" >> $GITHUB_STEP_SUMMARY
          ./gradlew publishAllPublicationsToMavenCentral -Psigning.secretKeyRingFile=$GITHUB_WORKSPACE/signingkey.gpg -Psigning.password=$SIGNING_KEY_PASSWORD -Psigning.keyId=$SIGNING_KEY_ID -PmavenCentralUsername=$SONATYPE_NEXUS_USERNAME -PmavenCentralPassword=$SONATYPE_NEXUS_PASSWORD
              echo "[Maven Central](https://search.maven.org/artifact/io.openmobilemaps/${{ steps.vars.outputs.artifactId }}/${{ steps.vars.outputs.version }}/aar)" >> $GITHUB_STEP_SUMMARY
              echo "| Git Commit | Artifact ID | Maven Version |" >> $GITHUB_STEP_SUMMARY
              echo "| --- | --- | --- |" >> $GITHUB_STEP_SUMMARY
              echo "| $GITHUB_SHA | ${{ steps.vars.outputs.artifactId }} | ${{ steps.vars.outputs.version }} |" >> $GITHUB_STEP_SUMMARY

  create_sub_repo_prs:
    name: "Create version PRs in sub-repos"
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Trigger sub-repo workflow
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.UBIQUE_JENKINS_PAT }}
          script: |
            let subrepos = "${{ vars.SUB_REPOS }}".split(",");
            for (let i in subrepos) {
              let subrepo = subrepos[i];
              let organization = subrepo.split("/")[0];
              let repoName = subrepo.split("/")[1];
              let inputs = {
                "mapsCoreBranch": "${{ github.ref_name }}",
                "mapsCoreCommitHash": "${{ github.sha }}", 
                "mapsCoreArtifactId": "${{ needs.build.outputs.artifactId }}", 
                "mapsCoreArtifactVersion": "${{ needs.build.outputs.version }}"
              }

              const result = await github.rest.actions.createWorkflowDispatch({
                owner: organization,
                repo: repoName,
                workflow_id: 'dependencies-pr.yml',
                ref: 'develop',
                inputs: inputs
              });

              if (result.status > 299) {
                console.log(result);
              }
            }
