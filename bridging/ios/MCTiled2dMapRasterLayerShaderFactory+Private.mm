// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from tiled_raster_layer.djinni

#import "MCTiled2dMapRasterLayerShaderFactory+Private.h"
#import "MCTiled2dMapRasterLayerShaderFactory.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIObjcWrapperCache+Private.h"
#import "MCAlphaShaderInterface+Private.h"
#import "MCInterpolationShaderInterface+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface MCTiled2dMapRasterLayerShaderFactoryCppProxy : NSObject<MCTiled2dMapRasterLayerShaderFactory>

- (id)initWithCpp:(const std::shared_ptr<::Tiled2dMapRasterLayerShaderFactory>&)cppRef;

@end

@implementation MCTiled2dMapRasterLayerShaderFactoryCppProxy {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::Tiled2dMapRasterLayerShaderFactory>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::Tiled2dMapRasterLayerShaderFactory>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (nullable id<MCAlphaShaderInterface>)combineShader {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->combineShader();
        return ::djinni_generated::AlphaShaderInterface::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable id<MCInterpolationShaderInterface>)finalShader {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->finalShader();
        return ::djinni_generated::InterpolationShaderInterface::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

class Tiled2dMapRasterLayerShaderFactory::ObjcProxy final
: public ::Tiled2dMapRasterLayerShaderFactory
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::Tiled2dMapRasterLayerShaderFactory;
public:
    using ObjcProxyBase::ObjcProxyBase;
    std::shared_ptr<::AlphaShaderInterface> combineShader() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() combineShader];
            return ::djinni_generated::AlphaShaderInterface::toCpp(objcpp_result_);
        }
    }
    std::shared_ptr<::InterpolationShaderInterface> finalShader() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() finalShader];
            return ::djinni_generated::InterpolationShaderInterface::toCpp(objcpp_result_);
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto Tiled2dMapRasterLayerShaderFactory::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    if ([(id)objc isKindOfClass:[MCTiled2dMapRasterLayerShaderFactoryCppProxy class]]) {
        return ((MCTiled2dMapRasterLayerShaderFactoryCppProxy*)objc)->_cppRefHandle.get();
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto Tiled2dMapRasterLayerShaderFactory::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    if (auto cppPtr = dynamic_cast<ObjcProxy*>(cpp.get())) {
        return cppPtr->djinni_private_get_proxied_objc_object();
    }
    return ::djinni::get_cpp_proxy<MCTiled2dMapRasterLayerShaderFactoryCppProxy>(cpp);
}

}  // namespace djinni_generated

@end
