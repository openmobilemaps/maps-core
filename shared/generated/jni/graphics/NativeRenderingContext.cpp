// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from renderer.djinni

#include "NativeRenderingContext.h"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeRenderingContext::NativeRenderingContext() : ::djinni::JniInterface<::RenderingContext, NativeRenderingContext>("ch/ubique/mapscore/shared/graphics/RenderingContext$CppProxy") {}

NativeRenderingContext::~NativeRenderingContext() = default;

NativeRenderingContext::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeRenderingContext::JavaProxy::~JavaProxy() = default;

std::shared_ptr<::RenderingContext> NativeRenderingContext::JavaProxy::getSelf() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeRenderingContext>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_getSelf);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativeRenderingContext::toCpp(jniEnv, jret);
}
void NativeRenderingContext::JavaProxy::onSurfaceCreated() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeRenderingContext>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onSurfaceCreated);
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeRenderingContext::JavaProxy::setViewport(int32_t c_w, int32_t c_h) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeRenderingContext>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_setViewport,
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_w)),
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_h)));
    ::djinni::jniExceptionCheck(jniEnv);
}

CJNIEXPORT void JNICALL Java_ch_ubique_mapscore_shared_graphics_RenderingContext_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::RenderingContext>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_ch_ubique_mapscore_shared_graphics_RenderingContext_00024CppProxy_native_1getSelf(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RenderingContext>(nativeRef);
        auto r = ref->getSelf();
        return ::djinni::release(::djinni_generated::NativeRenderingContext::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_ch_ubique_mapscore_shared_graphics_RenderingContext_00024CppProxy_native_1onSurfaceCreated(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RenderingContext>(nativeRef);
        ref->onSurfaceCreated();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_ch_ubique_mapscore_shared_graphics_RenderingContext_00024CppProxy_native_1setViewport(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jint j_w, jint j_h)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::RenderingContext>(nativeRef);
        ref->setViewport(::djinni::I32::toCpp(jniEnv, j_w),
                         ::djinni::I32::toCpp(jniEnv, j_h));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
