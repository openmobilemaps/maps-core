@extern "../yaml/vec_2_d.yaml"
@extern "../yaml/vec_2_i.yaml"
@extern "../yaml/scheduler_interface.yaml"
@extern "../yaml/touch_handler_interface.yaml"
@extern "../yaml/shader_factory_interface.yaml"
@extern "../yaml/graphics_object_factory_interface.yaml"
@extern "../yaml/camera_interface.yaml"
@extern "../yaml/scene_interface.yaml"
@extern "../yaml/rendering_context_interface.yaml"
@extern "../yaml/map_coordinate_system.yaml"
@extern "../yaml/coordinate_conversion_helper_interface.yaml"
@extern "../yaml/coord.yaml"
@extern "../yaml/map_camera_2d_interface.yaml"
@extern "../yaml/map_camera_2d_listener_interface.yaml"
@extern "../yaml/color.yaml"
@extern "../yaml/render_pass_interface.yaml"

map_interface = interface +c {
    static create(graphics_factory: graphics_object_factory_interface, shader_factory: shader_factory_interface, rendering_context: rendering_context_interface, map_config: map_config, scheduler: scheduler_interface, pixel_density: f32) : map_interface;
    static createWithOpenGl(map_config: map_config, scheduler: scheduler_interface, pixel_density: f32) : map_interface;

    set_callback_handler(callback_interface: map_callback_interface);

    get_graphics_object_factory() : graphics_object_factory_interface;
    get_shader_factory() : shader_factory_interface;

    get_scheduler() : scheduler_interface;
    get_rendering_context() : rendering_context_interface;
    get_map_config() : map_config;
    get_coordinate_converter_helper() : coordinate_conversion_helper_interface;

    set_camera(camera: camera_interface);
    get_camera() : camera_interface;

    set_touch_handler(touch_handler: touch_handler_interface);
    get_touch_handler() : touch_handler_interface;

    add_layer(layer: layer_interface);
    remove_layer(layer: layer_interface);

    set_viewport_size(size: vec_2_i);
    set_background_color(color: color);

    invalidate();
    draw_frame();
    resume();
    pause();
}

map_callback_interface = interface +c +j +o {
    invalidate();
}

map_config = record {
    map_coordinate_system: map_coordinate_system;
    zoom_min: f64;
    zoom_max: f64;
}

layer_interface = interface +c +j +o {
    update();
    build_render_passes(): list<render_pass_interface>;
    get_identifier(): string;
    onAdded(map_interface: map_interface);
    onRemoved();
    pause();
    resume();
    hide();
    show();
}
