// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from polygon.djinni

#import "MCPolygonMaskObjectInterface+Private.h"
#import "MCPolygonMaskObjectInterface.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "MCCoordinateConversionHelperInterface+Private.h"
#import "MCGraphicsObjectFactoryInterface+Private.h"
#import "MCPolygon2dInterface+Private.h"
#import "MCPolygonCoord+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface MCPolygonMaskObjectInterface ()

- (id)initWithCpp:(const std::shared_ptr<::PolygonMaskObjectInterface>&)cppRef;

@end

@implementation MCPolygonMaskObjectInterface {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::PolygonMaskObjectInterface>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::PolygonMaskObjectInterface>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nullable MCPolygonMaskObjectInterface *)create:(nullable id<MCGraphicsObjectFactoryInterface>)graphicsObjectFactory
                                 conversionHelper:(nullable MCCoordinateConversionHelperInterface *)conversionHelper
                                             is3d:(BOOL)is3d {
    try {
        auto objcpp_result_ = ::PolygonMaskObjectInterface::create(::djinni_generated::GraphicsObjectFactoryInterface::toCpp(graphicsObjectFactory),
                                                                   ::djinni_generated::CoordinateConversionHelperInterface::toCpp(conversionHelper),
                                                                   ::djinni::Bool::toCpp(is3d));
        return ::djinni_generated::PolygonMaskObjectInterface::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)setPolygons:(nonnull NSArray<MCPolygonCoord *> *)polygons {
    try {
        _cppRefHandle.get()->setPolygons(::djinni::List<::djinni_generated::PolygonCoord>::toCpp(polygons));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)setPolygon:(nonnull MCPolygonCoord *)polygon {
    try {
        _cppRefHandle.get()->setPolygon(::djinni_generated::PolygonCoord::toCpp(polygon));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable id<MCPolygon2dInterface>)getPolygonObject {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getPolygonObject();
        return ::djinni_generated::Polygon2dInterface::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto PolygonMaskObjectInterface::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto PolygonMaskObjectInterface::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<MCPolygonMaskObjectInterface>(cpp);
}

} // namespace djinni_generated

@end
