// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from parcelable.djinni

package com.dropbox.djinni.test;

import java.util.Date;
import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

public class ParcelablePrimitives implements android.os.Parcelable {


    /*package*/ final boolean mB;

    /*package*/ final byte mEight;

    /*package*/ final short mSixteen;

    /*package*/ final int mThirtytwo;

    /*package*/ final long mSixtyfour;

    /*package*/ final float mFthirtytwo;

    /*package*/ final double mFsixtyfour;

    /*package*/ final String mS;

    /*package*/ final Date mD;

    /*package*/ final Boolean mOB;

    /*package*/ final Byte mOEight;

    /*package*/ final Short mOSixteen;

    /*package*/ final Integer mOThirtytwo;

    /*package*/ final Long mOSixtyfour;

    /*package*/ final Float mOFthirtytwo;

    /*package*/ final Double mOFsixtyfour;

    /*package*/ final String mOS;

    /*package*/ final Date mOD;

    public ParcelablePrimitives(
            boolean b,
            byte eight,
            short sixteen,
            int thirtytwo,
            long sixtyfour,
            float fthirtytwo,
            double fsixtyfour,
            @Nonnull String s,
            @Nonnull Date d,
            @CheckForNull Boolean oB,
            @CheckForNull Byte oEight,
            @CheckForNull Short oSixteen,
            @CheckForNull Integer oThirtytwo,
            @CheckForNull Long oSixtyfour,
            @CheckForNull Float oFthirtytwo,
            @CheckForNull Double oFsixtyfour,
            @CheckForNull String oS,
            @CheckForNull Date oD) {
        this.mB = b;
        this.mEight = eight;
        this.mSixteen = sixteen;
        this.mThirtytwo = thirtytwo;
        this.mSixtyfour = sixtyfour;
        this.mFthirtytwo = fthirtytwo;
        this.mFsixtyfour = fsixtyfour;
        this.mS = s;
        this.mD = d;
        this.mOB = oB;
        this.mOEight = oEight;
        this.mOSixteen = oSixteen;
        this.mOThirtytwo = oThirtytwo;
        this.mOSixtyfour = oSixtyfour;
        this.mOFthirtytwo = oFthirtytwo;
        this.mOFsixtyfour = oFsixtyfour;
        this.mOS = oS;
        this.mOD = oD;
    }

    public boolean getB() {
        return mB;
    }

    public byte getEight() {
        return mEight;
    }

    public short getSixteen() {
        return mSixteen;
    }

    public int getThirtytwo() {
        return mThirtytwo;
    }

    public long getSixtyfour() {
        return mSixtyfour;
    }

    public float getFthirtytwo() {
        return mFthirtytwo;
    }

    public double getFsixtyfour() {
        return mFsixtyfour;
    }

    @Nonnull
    public String getS() {
        return mS;
    }

    @Nonnull
    public Date getD() {
        return mD;
    }

    @CheckForNull
    public Boolean getOB() {
        return mOB;
    }

    @CheckForNull
    public Byte getOEight() {
        return mOEight;
    }

    @CheckForNull
    public Short getOSixteen() {
        return mOSixteen;
    }

    @CheckForNull
    public Integer getOThirtytwo() {
        return mOThirtytwo;
    }

    @CheckForNull
    public Long getOSixtyfour() {
        return mOSixtyfour;
    }

    @CheckForNull
    public Float getOFthirtytwo() {
        return mOFthirtytwo;
    }

    @CheckForNull
    public Double getOFsixtyfour() {
        return mOFsixtyfour;
    }

    @CheckForNull
    public String getOS() {
        return mOS;
    }

    @CheckForNull
    public Date getOD() {
        return mOD;
    }

    @Override
    public String toString() {
        return "ParcelablePrimitives{" +
                "mB=" + mB +
                "," + "mEight=" + mEight +
                "," + "mSixteen=" + mSixteen +
                "," + "mThirtytwo=" + mThirtytwo +
                "," + "mSixtyfour=" + mSixtyfour +
                "," + "mFthirtytwo=" + mFthirtytwo +
                "," + "mFsixtyfour=" + mFsixtyfour +
                "," + "mS=" + mS +
                "," + "mD=" + mD +
                "," + "mOB=" + mOB +
                "," + "mOEight=" + mOEight +
                "," + "mOSixteen=" + mOSixteen +
                "," + "mOThirtytwo=" + mOThirtytwo +
                "," + "mOSixtyfour=" + mOSixtyfour +
                "," + "mOFthirtytwo=" + mOFthirtytwo +
                "," + "mOFsixtyfour=" + mOFsixtyfour +
                "," + "mOS=" + mOS +
                "," + "mOD=" + mOD +
        "}";
    }


    public static final android.os.Parcelable.Creator<ParcelablePrimitives> CREATOR
        = new android.os.Parcelable.Creator<ParcelablePrimitives>() {
        @Override
        public ParcelablePrimitives createFromParcel(android.os.Parcel in) {
            return new ParcelablePrimitives(in);
        }

        @Override
        public ParcelablePrimitives[] newArray(int size) {
            return new ParcelablePrimitives[size];
        }
    };

    public ParcelablePrimitives(android.os.Parcel in) {
        this.mB = in.readByte() != 0;
        this.mEight = in.readByte();
        this.mSixteen = (short)in.readInt();
        this.mThirtytwo = in.readInt();
        this.mSixtyfour = in.readLong();
        this.mFthirtytwo = in.readFloat();
        this.mFsixtyfour = in.readDouble();
        this.mS = in.readString();
        this.mD = new Date(in.readLong());
        if (in.readByte() == 0) {
            this.mOB = null;
        } else {
            this.mOB = in.readByte() != 0;
        }
        if (in.readByte() == 0) {
            this.mOEight = null;
        } else {
            this.mOEight = in.readByte();
        }
        if (in.readByte() == 0) {
            this.mOSixteen = null;
        } else {
            this.mOSixteen = (short)in.readInt();
        }
        if (in.readByte() == 0) {
            this.mOThirtytwo = null;
        } else {
            this.mOThirtytwo = in.readInt();
        }
        if (in.readByte() == 0) {
            this.mOSixtyfour = null;
        } else {
            this.mOSixtyfour = in.readLong();
        }
        if (in.readByte() == 0) {
            this.mOFthirtytwo = null;
        } else {
            this.mOFthirtytwo = in.readFloat();
        }
        if (in.readByte() == 0) {
            this.mOFsixtyfour = null;
        } else {
            this.mOFsixtyfour = in.readDouble();
        }
        if (in.readByte() == 0) {
            this.mOS = null;
        } else {
            this.mOS = in.readString();
        }
        if (in.readByte() == 0) {
            this.mOD = null;
        } else {
            this.mOD = new Date(in.readLong());
        }
    }

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(android.os.Parcel out, int flags) {
        out.writeByte(this.mB ? (byte)1 : 0);
        out.writeByte(this.mEight);
        out.writeInt(this.mSixteen);
        out.writeInt(this.mThirtytwo);
        out.writeLong(this.mSixtyfour);
        out.writeFloat(this.mFthirtytwo);
        out.writeDouble(this.mFsixtyfour);
        out.writeString(this.mS);
        out.writeLong(this.mD.getTime());
        if (this.mOB != null) {
            out.writeByte((byte)1);
            out.writeByte(this.mOB ? (byte)1 : 0);
        } else {
            out.writeByte((byte)0);
        }
        if (this.mOEight != null) {
            out.writeByte((byte)1);
            out.writeByte(this.mOEight);
        } else {
            out.writeByte((byte)0);
        }
        if (this.mOSixteen != null) {
            out.writeByte((byte)1);
            out.writeInt(this.mOSixteen);
        } else {
            out.writeByte((byte)0);
        }
        if (this.mOThirtytwo != null) {
            out.writeByte((byte)1);
            out.writeInt(this.mOThirtytwo);
        } else {
            out.writeByte((byte)0);
        }
        if (this.mOSixtyfour != null) {
            out.writeByte((byte)1);
            out.writeLong(this.mOSixtyfour);
        } else {
            out.writeByte((byte)0);
        }
        if (this.mOFthirtytwo != null) {
            out.writeByte((byte)1);
            out.writeFloat(this.mOFthirtytwo);
        } else {
            out.writeByte((byte)0);
        }
        if (this.mOFsixtyfour != null) {
            out.writeByte((byte)1);
            out.writeDouble(this.mOFsixtyfour);
        } else {
            out.writeByte((byte)0);
        }
        if (this.mOS != null) {
            out.writeByte((byte)1);
            out.writeString(this.mOS);
        } else {
            out.writeByte((byte)0);
        }
        if (this.mOD != null) {
            out.writeByte((byte)1);
            out.writeLong(this.mOD.getTime());
        } else {
            out.writeByte((byte)0);
        }
    }

}
