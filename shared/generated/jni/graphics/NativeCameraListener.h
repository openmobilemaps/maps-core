// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from core.djinni

#pragma once

#include "CameraListener.h"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeCameraListener final : ::djinni::JniInterface<::CameraListener, NativeCameraListener> {
public:
    using CppType = std::shared_ptr<::CameraListener>;
    using CppOptType = std::shared_ptr<::CameraListener>;
    using JniType = jobject;

    using Boxed = NativeCameraListener;

    ~NativeCameraListener();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeCameraListener>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeCameraListener>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeCameraListener();
    friend ::djinni::JniClass<NativeCameraListener>;
    friend ::djinni::JniInterface<::CameraListener, NativeCameraListener>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::CameraListener
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void onPositionChanged() override;

    private:
        friend ::djinni::JniInterface<::CameraListener, ::djinni_generated::NativeCameraListener>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("ch/ubique/mapscore/shared/graphics/CameraListener") };
    const jmethodID method_onPositionChanged { ::djinni::jniGetMethodID(clazz.get(), "onPositionChanged", "()V") };
};

}  // namespace djinni_generated
