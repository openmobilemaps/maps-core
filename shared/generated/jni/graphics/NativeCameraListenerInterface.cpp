// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from core.djinni

#include "NativeCameraListenerInterface.h"  // my header
#include "NativeVec3D.h"

namespace djinni_generated {

NativeCameraListenerInterface::NativeCameraListenerInterface() : ::djinni::JniInterface<::CameraListenerInterface, NativeCameraListenerInterface>("ch/ubique/mapscore/shared/graphics/CameraListenerInterface$CppProxy") {}

NativeCameraListenerInterface::~NativeCameraListenerInterface() = default;

NativeCameraListenerInterface::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeCameraListenerInterface::JavaProxy::~JavaProxy() = default;

void NativeCameraListenerInterface::JavaProxy::onPositionChanged(const ::Vec3D & c_position) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeCameraListenerInterface>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onPositionChanged,
                           ::djinni::get(::djinni_generated::NativeVec3D::fromCpp(jniEnv, c_position)));
    ::djinni::jniExceptionCheck(jniEnv);
}

CJNIEXPORT void JNICALL Java_ch_ubique_mapscore_shared_graphics_CameraListenerInterface_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::CameraListenerInterface>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_ch_ubique_mapscore_shared_graphics_CameraListenerInterface_00024CppProxy_native_1onPositionChanged(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, ::djinni_generated::NativeVec3D::JniType j_position)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::CameraListenerInterface>(nativeRef);
        ref->onPositionChanged(::djinni_generated::NativeVec3D::toCpp(jniEnv, j_position));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
