// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from network_activity_manager.djinni

package io.openmobilemaps.mapscore.shared.map

import java.util.concurrent.atomic.AtomicBoolean

abstract class NetworkActivityListenerInterface {

    abstract fun onTiledLayerErrorStateChanged(errors: ArrayList<TiledLayerError>)

    abstract fun onTasksProgressChanged(totalProgress: Float, tasksProgressInfos: ArrayList<TasksProgressInfo>)

    private class CppProxy : NetworkActivityListenerInterface {
        private val nativeRef: Long
        private val destroyed: AtomicBoolean = AtomicBoolean(false)

        private constructor(nativeRef: Long) {
            if (nativeRef == 0L) error("nativeRef is zero")
            this.nativeRef = nativeRef
        }

        private external fun nativeDestroy(nativeRef: Long)
        fun _djinni_private_destroy() {
            val destroyed = this.destroyed.getAndSet(true)
            if (!destroyed) nativeDestroy(this.nativeRef)
        }
        protected fun finalize() {
            _djinni_private_destroy()
        }

        override fun onTiledLayerErrorStateChanged(errors: ArrayList<TiledLayerError>) {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_onTiledLayerErrorStateChanged(this.nativeRef, errors)
        }
        private external fun native_onTiledLayerErrorStateChanged(_nativeRef: Long, errors: ArrayList<TiledLayerError>)

        override fun onTasksProgressChanged(totalProgress: Float, tasksProgressInfos: ArrayList<TasksProgressInfo>) {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            native_onTasksProgressChanged(this.nativeRef, totalProgress, tasksProgressInfos)
        }
        private external fun native_onTasksProgressChanged(_nativeRef: Long, totalProgress: Float, tasksProgressInfos: ArrayList<TasksProgressInfo>)
    }
}
