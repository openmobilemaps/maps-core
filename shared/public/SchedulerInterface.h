// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from task_scheduler.djinni

#pragma once

#include <memory>
#include <string>
#include <vector>

class TaskInterface;

class SchedulerInterface {
public:
    virtual ~SchedulerInterface() = default;

    virtual void addTask(const /*not-null*/ std::shared_ptr<TaskInterface> & task) = 0;

    virtual void addTasks(const std::vector</*not-null*/ std::shared_ptr<TaskInterface>> & tasks) = 0;

    virtual void removeTask(const std::string & id) = 0;

    virtual void clear() = 0;

    virtual void pause() = 0;

    virtual void resume() = 0;

    virtual bool hasSeparateGraphicsInvocation() = 0;

    /** Execute added graphics tasks. Returns true, if there are unprocessed tasks in the queue after the execution. */
    virtual bool runGraphicsTasks() = 0;
};
