// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from geo_json_parser.djinni

#include "NativeGeoJsonHelperInterface.h"  // my header
#include "Marshal.hpp"
#include "NativeGeoJsonPoint.h"

namespace djinni_generated {

NativeGeoJsonHelperInterface::NativeGeoJsonHelperInterface() : ::djinni::JniInterface<::GeoJsonHelperInterface, NativeGeoJsonHelperInterface>("io/openmobilemaps/mapscore/shared/map/layers/tiled/GeoJsonHelperInterface$CppProxy") {}

NativeGeoJsonHelperInterface::~NativeGeoJsonHelperInterface() = default;


CJNIEXPORT void JNICALL Java_io_openmobilemaps_mapscore_shared_map_layers_tiled_GeoJsonHelperInterface_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        delete reinterpret_cast<::djinni::CppProxyHandle<::GeoJsonHelperInterface>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_mapscore_shared_map_layers_tiled_GeoJsonHelperInterface_independentInstance(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        auto r = ::GeoJsonHelperInterface::independentInstance();
        return ::djinni::release(::djinni_generated::NativeGeoJsonHelperInterface::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_io_openmobilemaps_mapscore_shared_map_layers_tiled_GeoJsonHelperInterface_00024CppProxy_native_1geoJsonStringFromFeatureInfo(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_point)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::GeoJsonHelperInterface>(nativeRef);
        auto r = ref->geoJsonStringFromFeatureInfo(::djinni_generated::NativeGeoJsonPoint::toCpp(jniEnv, j_point));
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_io_openmobilemaps_mapscore_shared_map_layers_tiled_GeoJsonHelperInterface_00024CppProxy_native_1geoJsonStringFromFeatureInfos(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_points)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::GeoJsonHelperInterface>(nativeRef);
        auto r = ref->geoJsonStringFromFeatureInfos(::djinni::List<::djinni_generated::NativeGeoJsonPoint>::toCpp(jniEnv, j_points));
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

} // namespace djinni_generated
