// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from tiled_raster_layer.djinni

#pragma once

#include "BlendMode.h"
#include "LayerInterface.h"
#include "LoaderInterface.h"
#include "MaskingObjectInterface.h"
#include "RasterShaderStyle.h"
#include "ShaderProgramInterface.h"
#include "Tiled2dMapLayerConfig.h"
#include "Tiled2dMapReadyStateListener.h"
#include <cstdint>
#include <memory>
#include <optional>
#include <vector>

class Tiled2dMapRasterLayerCallbackInterface;

class Tiled2dMapRasterLayerInterface {
public:
    virtual ~Tiled2dMapRasterLayerInterface() = default;

    /** the loaders are tried in their respective order, if the first loader returns the error code NOOP the second will be tried and so on */
    static /*not-null*/ std::shared_ptr<Tiled2dMapRasterLayerInterface> createWithMask(const /*not-null*/ std::shared_ptr<::Tiled2dMapLayerConfig> & layerConfig, const std::vector</*not-null*/ std::shared_ptr<::LoaderInterface>> & loaders, const /*not-null*/ std::shared_ptr<::MaskingObjectInterface> & mask);

    /** the loaders are tried in their respective order, if the first loader returns the error code NOOP the second will be tried and so on */
    static /*not-null*/ std::shared_ptr<Tiled2dMapRasterLayerInterface> createWithShader(const /*not-null*/ std::shared_ptr<::Tiled2dMapLayerConfig> & layerConfig, const std::vector</*not-null*/ std::shared_ptr<::LoaderInterface>> & loaders, const /*not-null*/ std::shared_ptr<::ShaderProgramInterface> & shader);

    /** the loaders are tried in their respective order, if the first loader returns the error code NOOP the second will be tried and so on */
    static /*not-null*/ std::shared_ptr<Tiled2dMapRasterLayerInterface> create(const /*not-null*/ std::shared_ptr<::Tiled2dMapLayerConfig> & layerConfig, const std::vector</*not-null*/ std::shared_ptr<::LoaderInterface>> & loaders);

    virtual /*not-null*/ std::shared_ptr<::LayerInterface> asLayerInterface() = 0;

    virtual void setCallbackHandler(const /*not-null*/ std::shared_ptr<Tiled2dMapRasterLayerCallbackInterface> & handler) = 0;

    virtual /*nullable*/ std::shared_ptr<Tiled2dMapRasterLayerCallbackInterface> getCallbackHandler() = 0;

    virtual void removeCallbackHandler() = 0;

    virtual void setAlpha(float alpha) = 0;

    virtual float getAlpha() = 0;

    virtual void setStyle(const ::RasterShaderStyle & style) = 0;

    virtual ::RasterShaderStyle getStyle() = 0;

    virtual void setMinZoomLevelIdentifier(std::optional<int32_t> value) = 0;

    virtual std::optional<int32_t> getMinZoomLevelIdentifier() = 0;

    virtual void setMaxZoomLevelIdentifier(std::optional<int32_t> value) = 0;

    virtual std::optional<int32_t> getMaxZoomLevelIdentifier() = 0;

    virtual void setT(int32_t t) = 0;

    virtual void setReadyStateListener(const /*nullable*/ std::shared_ptr<::Tiled2dMapReadyStateListener> & listener) = 0;

    virtual /*not-null*/ std::shared_ptr<::Tiled2dMapLayerConfig> getConfig() = 0;

    virtual void set3dSubdivisionFactor(int32_t factor) = 0;

    virtual void setBlendMode(::BlendMode blendMode) = 0;
};
