// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from touch_handler.djinni

package ch.ubique.mapscore.shared.map.controls;

import java.util.ArrayList;
import java.util.concurrent.atomic.AtomicBoolean;

public abstract class TouchInterface {
    public abstract void onClickUnconfirmed(ch.ubique.mapscore.shared.graphics.common.Vec2F posScreen);

    public abstract void onClickConfirmed(ch.ubique.mapscore.shared.graphics.common.Vec2F posScreen);

    public abstract void onDoubleClick(ch.ubique.mapscore.shared.graphics.common.Vec2F posScreen);

    public abstract void onLongPress(ch.ubique.mapscore.shared.graphics.common.Vec2F posScreen);

    public abstract void onMove(ch.ubique.mapscore.shared.graphics.common.Vec2F deltaScreen, boolean confirmed, boolean doubleClick);

    public abstract void onMoveComplete();

    public abstract void onTwoFingerClick(ch.ubique.mapscore.shared.graphics.common.Vec2F posScreen1, ch.ubique.mapscore.shared.graphics.common.Vec2F posScreen2);

    public abstract void onTwoFingerMove(ArrayList<ch.ubique.mapscore.shared.graphics.common.Vec2F> posScreenOld, ArrayList<ch.ubique.mapscore.shared.graphics.common.Vec2F> posScreenNew);

    private static final class CppProxy extends TouchInterface
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void _djinni_private_destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            _djinni_private_destroy();
            super.finalize();
        }

        @Override
        public void onClickUnconfirmed(ch.ubique.mapscore.shared.graphics.common.Vec2F posScreen)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_onClickUnconfirmed(this.nativeRef, posScreen);
        }
        private native void native_onClickUnconfirmed(long _nativeRef, ch.ubique.mapscore.shared.graphics.common.Vec2F posScreen);

        @Override
        public void onClickConfirmed(ch.ubique.mapscore.shared.graphics.common.Vec2F posScreen)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_onClickConfirmed(this.nativeRef, posScreen);
        }
        private native void native_onClickConfirmed(long _nativeRef, ch.ubique.mapscore.shared.graphics.common.Vec2F posScreen);

        @Override
        public void onDoubleClick(ch.ubique.mapscore.shared.graphics.common.Vec2F posScreen)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_onDoubleClick(this.nativeRef, posScreen);
        }
        private native void native_onDoubleClick(long _nativeRef, ch.ubique.mapscore.shared.graphics.common.Vec2F posScreen);

        @Override
        public void onLongPress(ch.ubique.mapscore.shared.graphics.common.Vec2F posScreen)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_onLongPress(this.nativeRef, posScreen);
        }
        private native void native_onLongPress(long _nativeRef, ch.ubique.mapscore.shared.graphics.common.Vec2F posScreen);

        @Override
        public void onMove(ch.ubique.mapscore.shared.graphics.common.Vec2F deltaScreen, boolean confirmed, boolean doubleClick)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_onMove(this.nativeRef, deltaScreen, confirmed, doubleClick);
        }
        private native void native_onMove(long _nativeRef, ch.ubique.mapscore.shared.graphics.common.Vec2F deltaScreen, boolean confirmed, boolean doubleClick);

        @Override
        public void onMoveComplete()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_onMoveComplete(this.nativeRef);
        }
        private native void native_onMoveComplete(long _nativeRef);

        @Override
        public void onTwoFingerClick(ch.ubique.mapscore.shared.graphics.common.Vec2F posScreen1, ch.ubique.mapscore.shared.graphics.common.Vec2F posScreen2)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_onTwoFingerClick(this.nativeRef, posScreen1, posScreen2);
        }
        private native void native_onTwoFingerClick(long _nativeRef, ch.ubique.mapscore.shared.graphics.common.Vec2F posScreen1, ch.ubique.mapscore.shared.graphics.common.Vec2F posScreen2);

        @Override
        public void onTwoFingerMove(ArrayList<ch.ubique.mapscore.shared.graphics.common.Vec2F> posScreenOld, ArrayList<ch.ubique.mapscore.shared.graphics.common.Vec2F> posScreenNew)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_onTwoFingerMove(this.nativeRef, posScreenOld, posScreenNew);
        }
        private native void native_onTwoFingerMove(long _nativeRef, ArrayList<ch.ubique.mapscore.shared.graphics.common.Vec2F> posScreenOld, ArrayList<ch.ubique.mapscore.shared.graphics.common.Vec2F> posScreenNew);
    }
}
