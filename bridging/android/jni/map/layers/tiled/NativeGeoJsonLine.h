// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from geo_json_parser.djinni

#pragma once

#include "GeoJsonLine.h"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeGeoJsonLine final {
public:
    using CppType = ::GeoJsonLine;
    using JniType = jobject;

    using Boxed = NativeGeoJsonLine;

    ~NativeGeoJsonLine();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeGeoJsonLine();
    friend ::djinni::JniClass<NativeGeoJsonLine>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("io/openmobilemaps/mapscore/shared/map/layers/tiled/GeoJsonLine") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/util/ArrayList;Lio/openmobilemaps/mapscore/shared/map/layers/tiled/vector/VectorLayerFeatureInfo;)V") };
    const jfieldID field_points { ::djinni::jniGetFieldID(clazz.get(), "points", "Ljava/util/ArrayList;") };
    const jfieldID field_featureInfo { ::djinni::jniGetFieldID(clazz.get(), "featureInfo", "Lio/openmobilemaps/mapscore/shared/map/layers/tiled/vector/VectorLayerFeatureInfo;") };
};

} // namespace djinni_generated
