// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from map_helpers.djinni

#pragma once

#include "TiledLayerError.h"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeTiledLayerError final {
public:
    using CppType = ::TiledLayerError;
    using JniType = jobject;

    using Boxed = NativeTiledLayerError;

    ~NativeTiledLayerError();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeTiledLayerError();
    friend ::djinni::JniClass<NativeTiledLayerError>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("io/openmobilemaps/mapscore/shared/map/TiledLayerError") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Lio/openmobilemaps/mapscore/shared/map/loader/LoaderStatus;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLio/openmobilemaps/mapscore/shared/map/coordinates/RectCoord;)V") };
    const jfieldID field_status { ::djinni::jniGetFieldID(clazz.get(), "status", "Lio/openmobilemaps/mapscore/shared/map/loader/LoaderStatus;") };
    const jfieldID field_errorCode { ::djinni::jniGetFieldID(clazz.get(), "errorCode", "Ljava/lang/String;") };
    const jfieldID field_layerName { ::djinni::jniGetFieldID(clazz.get(), "layerName", "Ljava/lang/String;") };
    const jfieldID field_url { ::djinni::jniGetFieldID(clazz.get(), "url", "Ljava/lang/String;") };
    const jfieldID field_isRecoverable { ::djinni::jniGetFieldID(clazz.get(), "isRecoverable", "Z") };
    const jfieldID field_bounds { ::djinni::jniGetFieldID(clazz.get(), "bounds", "Lio/openmobilemaps/mapscore/shared/map/coordinates/RectCoord;") };
};

} // namespace djinni_generated
