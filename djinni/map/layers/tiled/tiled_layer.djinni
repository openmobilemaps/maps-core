@extern "../../../yaml/rect_coord.yaml"
@extern "../../../yaml/coord.yaml"
@extern "../../../yaml/layer_ready_state.yaml"
@extern "../../../yaml/error_manager.yaml"

tiled_2d_map_layer_config = interface +c +j +o {
    get_coordinate_system_identifier(): string;
    get_tile_url(x:i32, y:i32, t:i32, zoom:i32): string;
    get_zoom_level_infos() : list<tiled_2d_map_zoom_level_info>;
    get_zoom_info(): tiled_2d_map_zoom_info;
    get_layer_name() : string;
}

tiled_2d_map_zoom_level_info = record {
	zoom: f64;
	tile_width_layer_system_units: f32;
	num_tiles_x: i32;
	num_tiles_y: i32;
	num_tiles_t: i32;
	zoom_level_identifier: i32;
    bounds: rect_coord;
}

tiled_2d_map_zoom_info = record {
    # this factor is applied to the the scale
	zoom_level_scale_factor: f32;
	num_draw_previous_layers: i32;
    # if this flag is set to true the map is scaled according to the wmts scaledenominator (https://gis.stackexchange.com/questions/315881/what-is-wmts-scaledenominator)
    # and the screen ppi
    adapt_scale_to_screen: bool;
    mask_tile: bool;
    underzoom: bool;
    overzoom: bool;
}

tiled_2d_map_source_interface = interface +c {
    on_visible_bounds_changed(visible_bounds: rect_coord, cur_t:i32, zoom: f64);

    set_min_zoom_level_identifier(value: optional<i32>);
    get_min_zoom_level_identifier(): optional<i32>;

    set_max_zoom_level_identifier(value: optional<i32>);
    get_max_zoom_level_identifier(): optional<i32>;

    pause();
    resume();

    is_ready_to_render_offscreen() : layer_ready_state;

    set_error_manager(error_manager: error_manager);
    force_reload();
}

