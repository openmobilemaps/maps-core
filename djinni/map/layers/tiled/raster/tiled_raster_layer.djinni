@extern "../../../../yaml/tiled_2d_map_layer_config.yaml"
@extern "../../../../yaml/loader_interface.yaml"
@extern "../../../../yaml/layer_interface.yaml"
@extern "../../../../yaml/coord.yaml"
@extern "../../../../yaml/masking_object_interface.yaml"
@extern "../../../../yaml/shader_program_interface.yaml"
@extern "../../../../yaml/alpha_shader_interface.yaml"
@extern "../../../../yaml/interpolation_shader_interface.yaml"

tiled_2d_map_raster_layer_shader_factory = interface +c +j +o {
    combine_shader(): alpha_shader_interface;
    final_shader(): interpolation_shader_interface;
}

tiled_2d_map_raster_layer_interface = interface +c {
    # the loaders are tried in their respective order, if the first loader returns the error code NOOP the second will be tried and so on
    static create_with_mask(layer_config: tiled_2d_map_layer_config, loaders: list<loader_interface>, mask: masking_object_interface) : tiled_2d_map_raster_layer_interface;
    # the loaders are tried in their respective order, if the first loader returns the error code NOOP the second will be tried and so on
    static create_with_shader(layer_config: tiled_2d_map_layer_config, loaders: list<loader_interface>, shader:shader_program_interface) : tiled_2d_map_raster_layer_interface;
    # the loaders are tried in their respective order, if the first loader returns the error code NOOP the second will be tried and so on
    static create(layer_config: tiled_2d_map_layer_config, loaders: list<loader_interface>) : tiled_2d_map_raster_layer_interface;

     # interpolated version, the loaders are tried in their respective order, if the first loader returns the error code NOOP the second will be tried and so on
    static create_with_mask_interpolated(layer_config: tiled_2d_map_layer_config, loaders: list<loader_interface>, mask: masking_object_interface) : tiled_2d_map_raster_layer_interface;
    # interpolated version, the loaders are tried in their respective order, if the first loader returns the error code NOOP the second will be tried and so on
    static create_with_shader_interpolated(layer_config: tiled_2d_map_layer_config, loaders: list<loader_interface>, shader_factory: tiled_2d_map_raster_layer_shader_factory) : tiled_2d_map_raster_layer_interface;
    # interpolated version, the loaders are tried in their respective order, if the first loader returns the error code NOOP the second will be tried and so on
    static create_interpolated(layer_config: tiled_2d_map_layer_config, loaders: list<loader_interface>) : tiled_2d_map_raster_layer_interface;

    asLayerInterface(): layer_interface;
    set_callback_handler(handler: tiled_2d_map_raster_layer_callback_interface);
    get_callback_handler() : optional<tiled_2d_map_raster_layer_callback_interface>;
    remove_callback_handler();
    set_alpha(alpha: f32);
    get_alpha(): f32;

    set_min_zoom_level_identifier(value: optional<i32>);
    get_min_zoom_level_identifier(): optional<i32>;

    set_max_zoom_level_identifier(value: optional<i32>);
    get_max_zoom_level_identifier(): optional<i32>;

    set_t(t:f64);

    get_config() : tiled_2d_map_layer_config;
}

tiled_2d_map_raster_layer_callback_interface = interface +c +j +o {
    on_click_confirmed(coord: coord) : bool;
    on_long_press(coord: coord) : bool;
}
