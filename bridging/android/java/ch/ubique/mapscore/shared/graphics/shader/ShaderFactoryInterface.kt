// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from shader.djinni

package ch.ubique.mapscore.shared.graphics.shader

import java.util.concurrent.atomic.AtomicBoolean

abstract class ShaderFactoryInterface {

    abstract fun createAlphaShader(): AlphaShaderInterface

    abstract fun createColorLineShader(): ColorLineShaderInterface

    abstract fun createColorShader(): ColorShaderInterface

    private class CppProxy : ShaderFactoryInterface {
        private val nativeRef: Long
        private val destroyed: AtomicBoolean = AtomicBoolean(false)

        private constructor(nativeRef: Long) {
            if (nativeRef == 0L) error("nativeRef is zero")
            this.nativeRef = nativeRef
        }

        private external fun nativeDestroy(nativeRef: Long)
        fun _djinni_private_destroy() {
            val destroyed = this.destroyed.getAndSet(true)
            if (!destroyed) nativeDestroy(this.nativeRef)
        }
        protected fun finalize() {
            _djinni_private_destroy()
        }

        override fun createAlphaShader(): AlphaShaderInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_createAlphaShader(this.nativeRef)
        }
        private external fun native_createAlphaShader(_nativeRef: Long): AlphaShaderInterface

        override fun createColorLineShader(): ColorLineShaderInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_createColorLineShader(this.nativeRef)
        }
        private external fun native_createColorLineShader(_nativeRef: Long): ColorLineShaderInterface

        override fun createColorShader(): ColorShaderInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_createColorShader(this.nativeRef)
        }
        private external fun native_createColorShader(_nativeRef: Long): ColorShaderInterface
    }
}
