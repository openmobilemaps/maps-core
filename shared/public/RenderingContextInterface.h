// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from core.djinni

#pragma once

#include "Color.h"
#include "RectI.h"
#include "Vec2I.h"
#include <optional>

struct RenderPassConfig;

class RenderingContextInterface {
public:
    virtual ~RenderingContextInterface() = default;

    /** Ensure calling on graphics thread */
    virtual void onSurfaceCreated() = 0;

    /** Ensure calling on graphics thread */
    virtual void setViewportSize(const ::Vec2I & size) = 0;

    virtual ::Vec2I getViewportSize() = 0;

    virtual void setBackgroundColor(const ::Color & color) = 0;

    virtual void setupDrawFrame(const RenderPassConfig & pass) = 0;

    virtual void endDrawFrame() = 0;

    virtual void preRenderStencilMask(const RenderPassConfig & pass) = 0;

    virtual void postRenderStencilMask(const RenderPassConfig & pass) = 0;

    /** optional rectangle, remove scissoring when not set */
    virtual void applyScissorRect(const std::optional<::RectI> & scissorRect) = 0;
};
