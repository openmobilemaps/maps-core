// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from core.djinni

#import "MCMapInterface+Private.h"
#import "MCMapInterface.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "MCCameraInterface+Private.h"
#import "MCGraphicsObjectFactoryInterface+Private.h"
#import "MCLayerInterface+Private.h"
#import "MCLoaderInterface+Private.h"
#import "MCMapCallbackInterface+Private.h"
#import "MCMapConfig+Private.h"
#import "MCSchedulerInterface+Private.h"
#import "MCShaderFactoryInterface+Private.h"
#import "MCTouchHandlerInterface+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface MCMapInterface ()

- (id)initWithCpp:(const std::shared_ptr<::MapInterface>&)cppRef;

@end

@implementation MCMapInterface {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::MapInterface>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::MapInterface>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nullable MCMapInterface *)create:(nullable id<MCGraphicsObjectFactoryInterface>)graphicsFactory
                      shaderFactory:(nullable id<MCShaderFactoryInterface>)shaderFactory
                          mapConfig:(nonnull MCMapConfig *)mapConfig
                          scheduler:(nullable id<MCSchedulerInterface>)scheduler {
    try {
        auto objcpp_result_ = ::MapInterface::create(::djinni_generated::GraphicsObjectFactoryInterface::toCpp(graphicsFactory),
                                                     ::djinni_generated::ShaderFactoryInterface::toCpp(shaderFactory),
                                                     ::djinni_generated::MapConfig::toCpp(mapConfig),
                                                     ::djinni_generated::SchedulerInterface::toCpp(scheduler));
        return ::djinni_generated::MapInterface::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nullable MCMapInterface *)createWithOpenGl:(nonnull MCMapConfig *)mapConfig
                                    scheduler:(nullable id<MCSchedulerInterface>)scheduler {
    try {
        auto objcpp_result_ = ::MapInterface::createWithOpenGl(::djinni_generated::MapConfig::toCpp(mapConfig),
                                                               ::djinni_generated::SchedulerInterface::toCpp(scheduler));
        return ::djinni_generated::MapInterface::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)setCallbackHandler:(nullable id<MCMapCallbackInterface>)callbackInterface {
    try {
        _cppRefHandle.get()->setCallbackHandler(::djinni_generated::MapCallbackInterface::toCpp(callbackInterface));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)setCamera:(nullable id<MCCameraInterface>)camera {
    try {
        _cppRefHandle.get()->setCamera(::djinni_generated::CameraInterface::toCpp(camera));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable id<MCCameraInterface>)getCamera {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getCamera();
        return ::djinni_generated::CameraInterface::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)setTouchHandler:(nullable id<MCTouchHandlerInterface>)touchHandler {
    try {
        _cppRefHandle.get()->setTouchHandler(::djinni_generated::TouchHandlerInterface::toCpp(touchHandler));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable id<MCTouchHandlerInterface>)getTouchHandler {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getTouchHandler();
        return ::djinni_generated::TouchHandlerInterface::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)setLoader:(nullable id<MCLoaderInterface>)loader {
    try {
        _cppRefHandle.get()->setLoader(::djinni_generated::LoaderInterface::toCpp(loader));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)addLayer:(nullable id<MCLayerInterface>)layer {
    try {
        _cppRefHandle.get()->addLayer(::djinni_generated::LayerInterface::toCpp(layer));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)removeLayer:(nullable id<MCLayerInterface>)layer {
    try {
        _cppRefHandle.get()->removeLayer(::djinni_generated::LayerInterface::toCpp(layer));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)invalidate {
    try {
        _cppRefHandle.get()->invalidate();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)drawFrame {
    try {
        _cppRefHandle.get()->drawFrame();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)resume {
    try {
        _cppRefHandle.get()->resume();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)pause {
    try {
        _cppRefHandle.get()->pause();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto MapInterface::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto MapInterface::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<MCMapInterface>(cpp);
}

}  // namespace djinni_generated

@end
