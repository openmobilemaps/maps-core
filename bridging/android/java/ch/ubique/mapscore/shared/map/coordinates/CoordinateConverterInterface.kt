// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from coordinate_system.djinni

package ch.ubique.mapscore.shared.map.coordinates

import java.util.concurrent.atomic.AtomicBoolean

abstract class CoordinateConverterInterface {

    abstract fun convert(coordinate: Coord): Coord

    abstract fun getFrom(): String

    abstract fun getTo(): String

    private class CppProxy : CoordinateConverterInterface {
        private val nativeRef: Long
        private val destroyed: AtomicBoolean = AtomicBoolean(false)

        private constructor(nativeRef: Long) {
            if (nativeRef == 0L) error("nativeRef is zero")
            this.nativeRef = nativeRef
        }

        private external fun nativeDestroy(nativeRef: Long)
        fun _djinni_private_destroy() {
            val destroyed = this.destroyed.getAndSet(true)
            if (!destroyed) nativeDestroy(this.nativeRef)
        }
        protected fun finalize() {
            _djinni_private_destroy()
        }

        override fun convert(coordinate: Coord): Coord {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_convert(this.nativeRef, coordinate)
        }
        private external fun native_convert(_nativeRef: Long, coordinate: Coord): Coord

        override fun getFrom(): String {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getFrom(this.nativeRef)
        }
        private external fun native_getFrom(_nativeRef: Long): String

        override fun getTo(): String {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getTo(this.nativeRef)
        }
        private external fun native_getTo(_nativeRef: Long): String
    }
}
