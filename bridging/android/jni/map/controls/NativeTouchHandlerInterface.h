// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from touch_handler.djinni

#pragma once

#include "TouchHandlerInterface.h"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeTouchHandlerInterface final : ::djinni::JniInterface<::TouchHandlerInterface, NativeTouchHandlerInterface> {
public:
    using CppType = std::shared_ptr<::TouchHandlerInterface>;
    using CppOptType = std::shared_ptr<::TouchHandlerInterface>;
    using JniType = jobject;

    using Boxed = NativeTouchHandlerInterface;

    ~NativeTouchHandlerInterface();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeTouchHandlerInterface>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeTouchHandlerInterface>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeTouchHandlerInterface();
    friend ::djinni::JniClass<NativeTouchHandlerInterface>;
    friend ::djinni::JniInterface<::TouchHandlerInterface, NativeTouchHandlerInterface>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::TouchHandlerInterface
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void onTouchEvent(const ::TouchEvent & touchEvent) override;
        void addListener(const std::shared_ptr<::TouchInterface> & listener) override;
        void removeListener(const std::shared_ptr<::TouchInterface> & listener) override;

    private:
        friend ::djinni::JniInterface<::TouchHandlerInterface, ::djinni_generated::NativeTouchHandlerInterface>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("ch/ubique/mapscore/shared/map/controls/TouchHandlerInterface") };
    const jmethodID method_onTouchEvent { ::djinni::jniGetMethodID(clazz.get(), "onTouchEvent", "(Lch/ubique/mapscore/shared/map/controls/TouchEvent;)V") };
    const jmethodID method_addListener { ::djinni::jniGetMethodID(clazz.get(), "addListener", "(Lch/ubique/mapscore/shared/map/controls/TouchInterface;)V") };
    const jmethodID method_removeListener { ::djinni::jniGetMethodID(clazz.get(), "removeListener", "(Lch/ubique/mapscore/shared/map/controls/TouchInterface;)V") };
};

}  // namespace djinni_generated
